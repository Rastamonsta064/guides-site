{"version":3,"sources":["redux/actions.js","components/user/Main/MainEventsLI.js","components/user/Main/MainEventsList.js","components/user/Main/MainHeader.js","components/user/Main/Main.js","components/admin/events/CreateEvent.js","components/admin/events/EditEvent.js","components/admin/guides/GuideCreate.js","components/admin/guides/GuideEdit.js","components/user/client-hook/Payment.js","components/user/client-hook/Event.js","components/user/client-hook/Order.js","components/user/client-hook/ThankYou.js","components/user/client-hook/ClientHook.js","components/admin/events/EventsList.js","components/admin/guides/GuidesList.js","components/admin/orders/OrdersList.js","components/admin/AdminPanelHeader.js","components/admin/AdminPanel.js","components/admin/orders/OrderPage.js","components/admin/orders/order-create/OrderCreateForm.js","components/admin/orders/order-create/OrderCreateConfirm.js","components/admin/orders/order-create/OrderCreate.js","components/user/guides-for-user/GuideEventsList.js","components/user/guides-for-user/GuidePage.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["SET_EVENTS","SET_GUIDES","DELL_EVENT","SET_ORDERS","getEvents","dispatch","fetch","method","then","response","ok","json","Error","status","toString","eventsArr","type","payload","setEvents","catch","err","console","log","message","dellEvent","id","deleteEvent","updateEventRegistered","updatedEventReg","headers","body","JSON","stringify","getGuides","guidesArr","setGuides","getOrders","ordersArr","setOrders","addOrder","order","MainEventsLI","props","className","width","height","src","event","eventPhoto","alt","eventName","eventShortDescription","eventDifficulty","date","month","newDateStringArr","Date","toLocaleDateString","split","dateFormatHandler","eventDate","guideName","eventCity","newTimeArr","toLocaleTimeString","undefined","hour","minute","second","Number","eventDuration","durationStringHandler","eventPrice","eventCapacity","eventRegistered","to","_id","MainEventsList","events","map","reverse","MainHeader","guides","useSelector","state","onChange","e","setGuide","target","value","hidden","guide","Main","useState","filter","CreateEvent","useDispatch","history","useHistory","eventFullDescription","eventMeetingPoint","eventAdditionalInfo","newEvent","setNewEvent","onClick","createEvent","push","htmlFor","selected","showTimeSelect","rows","min","max","step","multiple","onDone","base64","EditEvent","editedEvent","setEditedEvent","useEffect","find","match","params","updatedEvent","GuideCreate","guideDescription","guideContact","guidePhoto","newGuide","setNewGuide","createGuideHandler","createGuide","GuideEdit","editedGuide","updateGuideHandler","updatedGuide","Payment","orderQuantity","orderTotal","orderEventId","setPaymentStatus","setView","Event","role","Order","errorMessage","setErrorMessage","clientName","clientPhone","clientEmail","eventId","newOrder","setNewOrder","ticketsAvailable","placeholder","required","setOrder","orderClientName","orderClientPhone","orderClientEmail","ThankYou","ddMMyyyy","qrInfo","url","ClientHook","view","paymentStatus","EventSmall","window","confirm","deleteEventHandler","EventsList","guideForFilter","setGuideForFilter","length","allEventsMapToTable","filterEventsMapToTable","GuideItem","guideEventsCount","deleteGuideHandler","GuidesList","deleteGuide","OrderSmall","createdAt","OrdersList","orders","eventIDForFilter","setEventIDForFilter","allOrdersToMapToTable","ordersToShowByID","AdminPanelHeader","AdminPanel","OrderPage","OrderCreateForm","setEvent","setErrorMes","OrderCreateConfirm","OrderCreate","errorMes","GuideEventsList","GuidePage","App","path","exact","component","initialState","user","store","createStore","action","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"8JAAaA,EAAa,aACbC,EAAa,aACbC,EAAa,aACbC,EAAa,aASbC,EAAY,WACrB,OAAO,SAACC,GACJC,MAAM,gCAAiC,CAACC,OAAQ,QAC3CC,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAMH,EAASI,OAAOC,eAGvCN,MAAK,SAAAO,GAAS,OAAIV,EAfN,SAACU,GAAD,MAAgB,CACrCC,KAAMhB,EACNiB,QAASF,GAa2BG,CAAUH,OACrCI,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAIG,cAU7BC,EAAY,SAACC,GACtB,OAAO,SAACpB,GACJC,MAAM,gCAAkCmB,EAAI,CAAClB,OAAQ,WAChDC,MAAK,SAAAC,GACF,IAAIA,EAASC,GAIT,MAAM,IAAIE,MAAMH,EAASI,OAAOC,YAHhCT,EAVO,SAACoB,GAAD,MAAS,CAChCT,KAAMd,EACNe,QAASQ,GAQgBC,CAAYD,IACrBJ,QAAQC,IAAR,yBAA8BG,EAA9B,kBAkDPE,EAAwB,SAACF,EAAIG,GACtC,OAAO,SAACvB,GACJC,MAAM,iDAAmDmB,EAAI,CACzDlB,OAAQ,OACRsB,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUJ,KAEpBpB,MAAK,SAAAC,GACF,IAAIA,EAASC,GAGT,MAAM,IAAIE,MAAMH,EAASI,OAAOC,YAFhCO,QAAQC,IAAIb,EAASE,WAK5BH,MAAK,kBAAMH,EAASD,QACpBe,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAYzBa,EAAY,WACrB,OAAO,SAAC5B,GACJC,MAAM,gCAAiC,CAACC,OAAQ,QAC3CC,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAMH,EAASI,OAAOC,eAGvCN,MAAK,SAAA0B,GAAS,OAAI7B,EAfN,SAAC6B,GAAD,MAAgB,CACrClB,KAAMf,EACNgB,QAASiB,GAa2BC,CAAUD,OACrCf,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAqEzBgB,EAAY,WACrB,OAAO,SAAC/B,GACJC,MAAM,gCAAiC,CAACC,OAAQ,QAC3CC,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAMH,EAASI,OAAOC,eAGvCN,MAAK,SAAA6B,GAAS,OAAIhC,EAfN,SAACgC,GAAD,MAAgB,CACrCrB,KAAMb,EACNc,QAASoB,GAa2BC,CAAUD,OACrClB,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAIG,cAI7BgB,EAAW,SAACC,GACrB,OAAO,SAACnC,GACJC,MAAM,mCAAoC,CACtCC,OAAQ,OACRsB,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUQ,KAEpBhC,MAAK,SAAAC,GACF,IAAIA,EAASC,GAGT,MAAM,IAAIE,MAAMH,EAASI,OAAOC,YAFhCO,QAAQC,IAAIb,EAASE,WAK5BH,MAAK,kBAAMH,EAAS+B,QACpBjB,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,sBC3IvBqB,EAxFM,SAACC,GA0DlB,OAEI,sBAAKC,UAAU,4FAAf,UACI,qBAAKA,UAAU,MAAf,SACI,qBAAKC,MAAM,MAAMC,OAAO,MAAMC,IAAKJ,EAAMK,MAAMC,WAAYC,IAAI,QAC1DN,UAAU,4CAEnB,sBAAKA,UAAU,QAAf,UACI,6BAAKD,EAAMK,MAAMG,YACjB,4BAAIR,EAAMK,MAAMI,wBAChB,uBACA,4LAAkCT,EAAMK,MAAMK,sBAElD,sBAAKT,UAAU,MAAf,UACI,4BAtEc,SAACU,GACvB,IAEIC,EADAC,EADgB,IAAIC,KAAKH,GAAMI,qBACEC,MAAM,KAE3C,OAAQH,EAAiB,IACrB,IAAK,KACDD,EAAQ,6CACR,MACJ,IAAK,KACDA,EAAQ,iCACR,MACJ,IAAK,KACDA,EAAQ,uCACR,MACJ,IAAK,KACDA,EAAQ,qBACR,MACJ,IAAK,KACDA,EAAQ,2BACR,MACJ,IAAK,KACDA,EAAQ,2BACR,MACJ,IAAK,KACDA,EAAQ,6CACR,MACJ,IAAK,KACDA,EAAQ,mDACR,MACJ,IAAK,KACDA,EAAQ,6CACR,MACJ,IAAK,KACDA,EAAQ,uCACR,MACJ,IAAK,KACDA,EAAQ,6CACR,MACJ,QACIA,EAAQ,uCAIhB,MAAM,GAAN,OAAUC,EAAiB,GAA3B,YAAiCD,GA2BrBK,CAAkBjB,EAAMK,MAAMa,aAClC,wEAAalB,EAAMK,MAAMc,gBAE7B,sBAAKlB,UAAU,UAAf,UACI,8BAAG,mBAAGA,UAAU,uBAAhB,IAA2CD,EAAMK,MAAMe,aACvD,8BAAG,mBAAGnB,UAAU,qBAAhB,IA7BkB,SAACU,GAC3B,IAKIU,EALU,IAAIP,KAAKH,GAAMW,wBAAmBC,EAAW,CACvDC,KAAM,UACNC,OAAQ,UACRC,OAAQ,YAEaV,MAAM,KAC/B,MAAM,GAAN,OAAUK,EAAW,GAArB,YAA2BA,EAAW,GAAtC,cAA8CM,OAAON,EAAW,IAAMM,OAAO3B,EAAMK,MAAMuB,eAAzF,YAA2GP,EAAW,GAAtH,aAA6HrB,EAAMK,MAAMuB,cAAzI,8BAsBiDC,CAAsB7B,EAAMK,MAAMa,cAC3E,8BAAG,mBAAGjB,UAAU,4BAAhB,KAAiDD,EAAMK,MAAMyB,cAC7D,8BAAG,mBAAG7B,UAAU,sBAAhB,qDAAmDD,EAAMK,MAAM0B,cAAgB/B,EAAMK,MAAM2B,gBAA3F,uCACA,cAAC,IAAD,CAAMC,GAAI,UAAYjC,EAAMK,MAAM6B,IAAlC,SACI,wBAAQjC,UAAU,kBAAlB,6ECvELkC,EATQ,SAACnC,GAEpB,OACI,qBAAKC,UAAU,yCAAf,SACKD,EAAMoC,OAAOC,KAAI,SAAAhC,GAAK,OAAI,cAAC,EAAD,CAA8BA,MAAOA,GAAlBA,EAAM6B,QAAsBI,aCgEvEC,EApEI,SAACvC,GAEhB,IAAMwC,EAASC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,UAE1C,OACI,qBAAKvC,UAAU,yCAAf,SACI,qBAAKA,UAAU,gEAAf,SACI,qBAAKA,UAAU,MAAf,SACI,wBAAOA,UAAU,yBAAjB,UACI,gCACA,+BACI,oDACA,gEACA,4EACA,uHACA,6BAAI,6BAAI,mBAAGA,UAAU,+CAGzB,gCACA,+BACI,6BACI,yBAAQA,UAAU,cAAc0C,SAAU,SAACC,GACvC5C,EAAM6C,SAASD,EAAEE,OAAOC,QAD5B,UAGI,wBAAQC,QAAM,EAAd,2EACA,wBAAQD,MAAM,MAAd,gCAECP,EAAOH,KAAI,SAACY,GACT,OAAO,wBAAwBF,MAAOE,EAAM9B,UAArC,SAAiD8B,EAAM9B,WAA1C8B,EAAMf,aAKtC,6BACI,wBAAQjC,UAAU,cAAlB,SACI,wBAAQ+C,QAAM,EAAd,iGAGR,6BACI,yBAAQ/C,UAAU,cAAlB,UACI,wBAAQ+C,QAAM,EAAd,6FACA,4HACA,0JACA,gHACA,yEAGR,6BACI,qBAAK/C,UAAU,yBAAf,SACI,uBAAOA,UAAU,qCAAqC3B,KAAK,iBAGnE,6BACI,cAAC,IAAD,CAAM2D,GAAG,SAAT,SACI,wBAAQhC,UAAU,8BAAlB,oGCpCrBiD,EAjBF,WAET,IAAMd,EAASK,aAAY,SAAAC,GAAK,OAAIA,EAAMN,UAE1C,EAAyBe,mBAAS,OAAlC,mBAAOF,EAAP,KAAaJ,EAAb,KACA,EAAuCM,mBAAS,OAAhD,mBACA,GADA,UACuBA,mBAAS,QAAhC,mBACA,GADA,UACyBA,mBAAS,QAAlC,6BAEA,OACI,qCACI,cAAC,EAAD,CAAYN,SAAUA,IACtB,cAAC,EAAD,CAAgBI,MAAOA,EAAOb,OAAkB,QAAVa,EAAkBb,EAASA,EAAOgB,QAAO,SAAA/C,GAAK,OAAGA,EAAMc,YAAc8B,W,iDCoMxGI,EA5MK,WAEhB,IAAMb,EAASC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,UAEpC7E,EAAW2F,cAEXC,EAAUC,cAEhB,EAAgCL,mBAAS,CACrCjC,UAAW,GACXU,cAAe,EACfpB,UAAW,GACXC,sBAAuB,GACvBgD,qBAAsB,GACtBC,kBAAmB,GACnBC,oBAAqB,GACrBvC,UAAW,GACXV,gBAAiB,GACjBqB,cAAe,EACfC,gBAAiB,EACjBF,WAAY,EACZxB,WAAY,GACZa,UAAW,KAdf,mBAAOyC,EAAP,KAAiBC,EAAjB,KAkBA,OACI,qCACI,qBAAK5D,UAAU,yCAAf,SACI,qBAAKA,UAAU,gEAAf,SACI,sBAAKA,UAAU,MAAf,UACI,yDACA,wBAAQA,UAAU,sBAAsB6D,QAAS,WACzCF,EAAS1C,WAAa0C,EAAShC,eAAiBgC,EAASpD,WAAaoD,EAASnD,uBAC/EmD,EAASH,sBACTG,EAASF,mBACTE,EAASD,qBACTC,EAASlD,iBACTkD,EAAS7B,eACT6B,EAAS9B,YACT8B,EAAStD,YACTsD,EAASzC,WACTxD,ELJL,SAACiG,GACxB,OAAO,SAACjG,GACJC,MAAM,mCAAoC,CACtCC,OAAQ,OACRsB,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUsE,KAEpB9F,MAAK,SAAAC,GACF,IAAIA,EAASC,GAGT,MAAM,IAAIE,MAAMH,EAASI,OAAOC,YAFhCO,QAAQC,IAAIb,EAASE,WAK5BH,MAAK,kBAAMH,EAASD,QACpBe,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OKbGqF,CAAYH,IACrBL,EAAQS,KAAK,WAEbrF,QAAQC,IAAI,iGAbpB,sFAkBA,wBAAQqB,UAAU,sBAAsB6D,QAAS,kBAAMP,EAAQS,KAAK,WAApE,uHAMZ,sBAAK/D,UAAU,mCAAf,UACI,sBAAKA,UAAU,qCAAf,UACI,qBAAKA,UAAU,QAAf,SACI,uBAAOgE,QAAQ,YAAf,0FAEJ,qBAAKhE,UAAU,QAAf,SACI,cAAC,IAAD,CACIA,UAAU,eACViE,SAAUN,EAAS1C,UACnByB,SAAU,SAAChC,GAAD,OAAUkD,EAAY,2BAAID,GAAL,IAAe1C,UAAWP,MACzDwD,gBAAc,EACdpF,GAAG,mBAIf,sBAAKkB,UAAU,iCAAf,UACI,qBAAKA,UAAU,QAAf,SACI,uBAAOgE,QAAQ,YAAf,iEAEJ,qBAAKhE,UAAU,SAAf,SACI,uBAAOA,UAAU,qBAAqB3B,KAAK,OAAOyE,MAAOa,EAASpD,UAAWzB,GAAG,YACzE4D,SAAU,SAACC,GAAD,OAAOiB,EAAY,2BAAID,GAAL,IAAepD,UAAWoC,EAAEE,OAAOC,iBAG9E,sBAAK9C,UAAU,iCAAf,UACI,qBAAKA,UAAU,QAAf,SACI,uBAAOgE,QAAQ,wBAAf,kHAEJ,qBAAKhE,UAAU,QAAf,SACI,0BAAUA,UAAU,qBAAqBmE,KAAK,IAAKrB,MAAOa,EAASnD,sBAAuB1B,GAAG,wBACtF4D,SAAU,SAACC,GAAD,OAAOiB,EAAY,2BAAID,GAAL,IAAenD,sBAAuBmC,EAAEE,OAAOC,iBAG1F,sBAAK9C,UAAU,iCAAf,UACI,qBAAKA,UAAU,QAAf,SACI,uBAAOgE,QAAQ,uBAAf,sGAEJ,qBAAKhE,UAAU,QAAf,SACI,0BAAUA,UAAU,eAAemE,KAAK,IAAIrB,MAAOa,EAASH,qBAAsB1E,GAAG,uBAC9E4D,SAAU,SAACC,GAAD,OAAOiB,EAAY,2BAAID,GAAL,IAAeH,qBAAsBb,EAAEE,OAAOC,iBAGzF,sBAAK9C,UAAU,iCAAf,UACI,qBAAKA,UAAU,QAAf,SACI,uBAAOgE,QAAQ,oBAAf,sGAEJ,qBAAKhE,UAAU,QAAf,SACI,uBAAOA,UAAU,eAAe3B,KAAK,OAAOyE,MAAOa,EAASF,kBAAmB3E,GAAG,oBAC3E4D,SAAU,SAACC,GAAD,OAAOiB,EAAY,2BAAID,GAAL,IAAeF,kBAAmBd,EAAEE,OAAOC,iBAGtF,sBAAK9C,UAAU,iCAAf,UACI,qBAAKA,UAAU,QAAf,SACI,uBAAOgE,QAAQ,sBAAf,+FAEJ,qBAAKhE,UAAU,QAAf,SACI,uBAAOA,UAAU,eAAe3B,KAAK,OAAOyE,MAAOa,EAASD,oBAAqB5E,GAAG,sBAC7E4D,SAAU,SAACC,GAAD,OAAOiB,EAAY,2BAAID,GAAL,IAAeD,oBAAqBf,EAAEE,OAAOC,iBAGxF,sBAAK9C,UAAU,iCAAf,UACI,qBAAKA,UAAU,QAAf,SACI,uBAAOgE,QAAQ,YAAf,+CAEJ,qBAAKhE,UAAU,QAAf,SACI,uBAAOA,UAAU,eAAe3B,KAAK,OAAOyE,MAAOa,EAASxC,UAAWrC,GAAG,YACnE4D,SAAU,SAACC,GAAD,OAAOiB,EAAY,2BAAID,GAAL,IAAexC,UAAWwB,EAAEE,OAAOC,iBAG9E,sBAAK9C,UAAU,iCAAf,UACI,qBAAKA,UAAU,QAAf,SACI,uBAAOgE,QAAQ,kBAAf,uEAEJ,qBAAKhE,UAAU,QAAf,SACI,yBAAQA,UAAU,cAAclB,GAAG,kBAC3B4D,SAAU,SAACC,GAAD,OAAOiB,EAAY,2BAAID,GAAL,IAAelD,gBAAiBkC,EAAEE,OAAOC,UAD7E,UAEI,6HACA,2JACA,wHAIZ,sBAAK9C,UAAU,iCAAf,UACI,qBAAKA,UAAU,QAAf,SACI,uBAAOgE,QAAQ,gBAAf,6GAEJ,qBAAKhE,UAAU,QAAf,SACI,uBAAOA,UAAU,eAAe3B,KAAK,SAASS,GAAG,gBAAgBsF,IAAI,IAAIC,IAAI,MACtE3B,SAAU,SAACC,GAAD,OAAOiB,EAAY,2BAAID,GAAL,IAAe7B,cAAea,EAAEE,OAAOC,iBAGlF,sBAAK9C,UAAU,iCAAf,UACI,qBAAKA,UAAU,QAAf,SACI,uBAAOgE,QAAQ,aAAf,uEAEJ,qBAAKhE,UAAU,QAAf,SACI,uBAAOA,UAAU,eAAe3B,KAAK,SAASS,GAAG,aAAasF,IAAI,IAAIC,IAAI,QACnE3B,SAAU,SAACC,GAAD,OAAOiB,EAAY,2BAAID,GAAL,IAAe9B,WAAYc,EAAEE,OAAOC,iBAI/E,sBAAK9C,UAAU,iCAAf,UACI,qBAAKA,UAAU,QAAf,SACI,uBAAOgE,QAAQ,gBAAf,wJAEJ,qBAAKhE,UAAU,QAAf,SACI,uBAAOA,UAAU,eAAe3B,KAAK,SAASS,GAAG,gBAAgBsF,IAAI,IAAIC,IAAI,KAAKC,KAAK,MAChF5B,SAAU,SAACC,GAAD,OAAOiB,EAAY,2BAAID,GAAL,IAAehC,cAAegB,EAAEE,OAAOC,iBAGlF,sBAAK9C,UAAU,iCAAf,UACI,qBAAKA,UAAU,QAAf,SACI,uBAAOgE,QAAQ,YAAf,mCAEJ,qBAAKhE,UAAU,QAAf,SACI,wBACIA,UAAU,cACV0C,SAAU,SAACC,GACPiB,EAAY,2BAAID,GAAL,IAAezC,UAAWyB,EAAEE,OAAOC,UAHtD,SAKKP,EAAOH,KAAI,SAACY,GACT,OAAO,wBAAwBF,MAAOE,EAAM9B,UAArC,SAAiD8B,EAAM9B,WAA1C8B,EAAMf,eAK1C,sBAAKjC,UAAU,iCAAf,UACI,qBAAKA,UAAU,QAAf,SACI,uBAAOgE,QAAQ,aAAf,0FAEJ,qBAAKhE,UAAU,QAAf,SACI,cAAC,IAAD,CACIA,UAAU,eACVuE,UAAU,EACFlG,KAAK,OACLmG,OAAQ,gBAAEC,EAAF,EAAEA,OAAF,OAAcb,EAAY,2BAAID,GAAL,IAAetD,WAAYoE,aAGhF,qBAAKzE,UAAU,iCAAf,SACI,qBAAKA,UAAU,QAAf,SACI,qBAAKG,IAAKwD,EAAStD,WAAYC,IAAI,+FCsB5CoE,EA1NG,SAAC3E,GAEf,IAAMoC,EAASK,aAAY,SAAAC,GAAK,OAAIA,EAAMN,UAEpCI,EAASC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,UAEpC7E,EAAW2F,cAEXC,EAAUC,cAEhB,EAAsCL,mBAAS,CAC3CjC,UAAW,GACXU,cAAe,EACfpB,UAAW,GACXC,sBAAuB,GACvBgD,qBAAsB,GACtBC,kBAAmB,GACnBC,oBAAqB,GACrBvC,UAAW,GACXV,gBAAiB,GACjBqB,cAAe,EACfC,gBAAiB,EACjBF,WAAY,EACZxB,WAAY,GACZa,UAAW,KAdf,mBAAOyD,EAAP,KAAoBC,EAApB,KAwBA,OANAC,qBAAU,WACN,IAAIF,EAAcxC,EAAO2C,MAAK,SAAA1E,GAAK,OAAIA,EAAM6B,MAAQlC,EAAMgF,MAAMC,OAAOlG,MACpE4B,EAAO,IAAIG,KAAK8D,EAAY1D,WAChC2D,EAAe,2BAAID,GAAL,IAAkB1D,UAAWP,OAC5C,IAGC,qCAEI,qBAAKV,UAAU,yCAAf,SACI,qBAAKA,UAAU,gEAAf,SACI,sBAAKA,UAAU,MAAf,UACI,6CAAgB2E,EAAYpE,aAC5B,wBAAQP,UAAU,sBAAsB6D,QAAS,WNkB9C,IAAC/E,EAAImG,EMjBAN,EAAY1D,WACZ0D,EAAYhD,eACZgD,EAAYpE,WACZoE,EAAYnE,uBACZmE,EAAYnB,sBACZmB,EAAYlB,mBACZkB,EAAYjB,qBACZiB,EAAYlE,iBACZkE,EAAY7C,eACZ6C,EAAY9C,YACZ8C,EAAYtE,YACZsE,EAAYzD,WACZxD,GNKJoB,EMLyBiB,EAAMgF,MAAMC,OAAOlG,GNKxCmG,EML4CN,ENMjE,SAACjH,GACJC,MAAM,uCAAyCmB,EAAI,CAC/ClB,OAAQ,OACRsB,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU4F,KAEpBpH,MAAK,SAAAC,GACF,IAAIA,EAASC,GAGT,MAAM,IAAIE,MAAMH,EAASI,OAAOC,YAFhCO,QAAQC,IAAIb,EAASE,WAK5BH,MAAK,kBAAMH,EAASD,QACpBe,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,SMrBN6E,EAAQS,KAAK,WAEbrF,QAAQC,IAAI,iGAhBpB,oEAqBA,wBAAQqB,UAAU,sBAAsB6D,QAAS,kBAAMP,EAAQS,KAAK,WAApE,uHAKZ,sBAAK/D,UAAU,mCAAf,UACI,sBAAKA,UAAU,qCAAf,UACI,qBAAKA,UAAU,QAAf,SACI,uBAAOgE,QAAQ,YAAf,0FAEJ,qBAAKhE,UAAU,QAAf,SACI,cAAC,IAAD,CACIA,UAAU,eACViE,SAAUU,EAAY1D,UACtByB,SAAU,SAAChC,GAAD,OAAUkE,EAAe,2BAAID,GAAL,IAAkB1D,UAAWP,MAC/DwD,gBAAc,EACdpF,GAAG,mBAIf,sBAAKkB,UAAU,iCAAf,UACI,qBAAKA,UAAU,QAAf,SACI,uBAAOgE,QAAQ,YAAf,iEAEJ,qBAAKhE,UAAU,SAAf,SACI,uBAAO3B,KAAK,OAAOyE,MAAO6B,EAAYpE,UAAWzB,GAAG,YAAYkB,UAAU,qBACnE0C,SAAU,SAACC,GAAD,OAAOiC,EAAe,2BAAID,GAAL,IAAkBpE,UAAWoC,EAAEE,OAAOC,iBAGpF,sBAAK9C,UAAU,iCAAf,UACI,qBAAKA,UAAU,QAAf,SACI,uBAAOgE,QAAQ,wBAAf,kHAEJ,qBAAKhE,UAAU,QAAf,SACI,0BAAUA,UAAU,qBAAqBmE,KAAK,IAAKrB,MAAO6B,EAAYnE,sBAAuB1B,GAAG,wBACtF4D,SAAU,SAACC,GAAD,OAAOiC,EAAe,2BACzBD,GADwB,IAE3BnE,sBAAuBmC,EAAEE,OAAOC,iBAItD,sBAAK9C,UAAU,iCAAf,UACI,qBAAKA,UAAU,QAAf,SACI,uBAAOgE,QAAQ,uBAAf,sGAEJ,qBAAKhE,UAAU,QAAf,SACI,0BAAUA,UAAU,eAAemE,KAAK,IAAIrB,MAAO6B,EAAYnB,qBAAsB1E,GAAG,uBAC9E4D,SAAU,SAACC,GAAD,OAAOiC,EAAe,2BAAID,GAAL,IAAkBnB,qBAAsBb,EAAEE,OAAOC,iBAGlG,sBAAK9C,UAAU,iCAAf,UACI,qBAAKA,UAAU,QAAf,SACI,uBAAOgE,QAAQ,oBAAf,sGAEJ,qBAAKhE,UAAU,QAAf,SACI,uBAAOA,UAAU,eAAe3B,KAAK,OAAOyE,MAAO6B,EAAYlB,kBAAmB3E,GAAG,oBAC9E4D,SAAU,SAACC,GAAD,OAAOiC,EAAe,2BAAID,GAAL,IAAkBlB,kBAAmBd,EAAEE,OAAOC,iBAG5F,sBAAK9C,UAAU,iCAAf,UACI,qBAAKA,UAAU,QAAf,SACI,uBAAOgE,QAAQ,sBAAf,+FAEJ,qBAAKhE,UAAU,QAAf,SACI,uBAAOA,UAAU,eAAe3B,KAAK,OAAOyE,MAAO6B,EAAYjB,oBAAqB5E,GAAG,sBAChF4D,SAAU,SAACC,GAAD,OAAOiC,EAAe,2BAAID,GAAL,IAAkBjB,oBAAqBf,EAAEE,OAAOC,iBAG9F,sBAAK9C,UAAU,iCAAf,UACI,qBAAKA,UAAU,QAAf,SACI,uBAAOgE,QAAQ,YAAf,+CAEJ,qBAAKhE,UAAU,QAAf,SACI,uBAAOA,UAAU,eAAe3B,KAAK,OAAOyE,MAAO6B,EAAYxD,UAAWrC,GAAG,YACtE4D,SAAU,SAACC,GAAD,OAAOiC,EAAe,2BAAID,GAAL,IAAkBxD,UAAWwB,EAAEE,OAAOC,iBAGpF,sBAAK9C,UAAU,iCAAf,UACI,qBAAKA,UAAU,QAAf,SACI,uBAAOgE,QAAQ,kBAAf,uEAEJ,qBAAKhE,UAAU,QAAf,SACI,yBAAQA,UAAU,cAAclB,GAAG,kBAC3B4D,SAAU,SAACC,GAAD,OAAOiC,EAAe,2BAAID,GAAL,IAAkBlE,gBAAiBkC,EAAEE,OAAOC,UADnF,UAEI,6HACA,2JACA,wHAIZ,sBAAK9C,UAAU,iCAAf,UACI,qBAAKA,UAAU,QAAf,SACI,uBAAOgE,QAAQ,gBAAf,6GAEJ,qBAAKhE,UAAU,QAAf,SACI,uBAAOA,UAAU,eAAe3B,KAAK,SAASS,GAAG,gBAAgBsF,IAAI,IAAIC,IAAI,MAAMvB,MAAO6B,EAAY7C,cAC/FY,SAAU,SAACC,GAAD,OAAOiC,EAAe,2BAAID,GAAL,IAAkB7C,cAAea,EAAEE,OAAOC,iBAGxF,sBAAK9C,UAAU,iCAAf,UACI,qBAAKA,UAAU,QAAf,SACI,uBAAOgE,QAAQ,aAAf,uEAEJ,qBAAKhE,UAAU,QAAf,SACI,uBAAOA,UAAU,eAAe3B,KAAK,SAASS,GAAG,aAAasF,IAAI,IAAIC,IAAI,QAAQvB,MAAO6B,EAAY9C,WAC9Fa,SAAU,SAACC,GAAD,OAAOiC,EAAe,2BAAID,GAAL,IAAkB9C,WAAYc,EAAEE,OAAOC,iBAIrF,sBAAK9C,UAAU,iCAAf,UACI,qBAAKA,UAAU,QAAf,SACI,uBAAOgE,QAAQ,gBAAf,wJAEJ,qBAAKhE,UAAU,QAAf,SACI,uBAAO3B,KAAK,SAASS,GAAG,gBAAgBsF,IAAI,IAAIC,IAAI,MAAMC,KAAK,MAAMxB,MAAO6B,EAAYhD,cAAe3B,UAAU,eAC1G0C,SAAU,SAACC,GAAD,OAAOiC,EAAe,2BAAID,GAAL,IAAkBhD,cAAegB,EAAEE,OAAOC,iBAGxF,sBAAK9C,UAAU,iCAAf,UACI,qBAAKA,UAAU,QAAf,SACI,uBAAOgE,QAAQ,YAAf,mCAEJ,qBAAKhE,UAAU,QAAf,SACI,wBACIA,UAAU,cACV0C,SAAU,SAACC,GACPiC,EAAe,2BAAID,GAAL,IAAkBzD,UAAWyB,EAAEE,OAAOC,UAH5D,SAKKP,EAAOH,KAAI,SAACY,GACT,OAAO,wBAAwBF,MAAOE,EAAM9B,UAArC,SAAiD8B,EAAM9B,WAA1C8B,EAAMf,eAK1C,sBAAKjC,UAAU,iCAAf,UACI,qBAAKA,UAAU,QAAf,SACI,uBAAOgE,QAAQ,aAAf,0FAEJ,qBAAKhE,UAAU,QAAf,SACI,cAAC,IAAD,CACIA,UAAU,eACVuE,UAAU,EACVlG,KAAK,OACLmG,OAAQ,gBAAEC,EAAF,EAAEA,OAAF,OAAcG,EAAe,2BAAID,GAAL,IAAkBtE,WAAYoE,aAG9E,qBAAKzE,UAAU,iCAAf,SACI,qBAAKA,UAAU,QAAf,SACI,qBAAKG,IAAKwE,EAAYtE,WAAYC,IAAI,+FC1I/C4E,EA1EK,WAEhB,MAAgChC,mBAAS,CAAChC,UAAW,GAAIiE,iBAAkB,GAAIC,aAAc,GAAIC,WAAY,KAA7G,mBAAOC,EAAP,KAAiBC,EAAjB,KACM7H,EAAW2F,cACXC,EAAUC,cAEViC,EAAqB,SAACF,GACpBA,EAASpE,WAAaoE,EAASH,kBAAoBG,EAASF,cAAgBE,EAASD,aACrF3H,EPsHe,SAAC4H,GACxB,OAAO,SAAC5H,GACJC,MAAM,mCAAoC,CACtCC,OAAQ,OACRsB,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUiG,KAEpBzH,MAAK,SAAAC,GACF,IAAIA,EAASC,GAGT,MAAM,IAAIE,MAAMH,EAASI,OAAOC,YAFhCO,QAAQC,IAAIb,EAASE,WAK5BH,MAAK,kBAAMH,EAAS4B,QACpBd,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OOvIjBgH,CAAYH,IACrBhC,EAAQS,KAAK,YAIrB,OACI,qCACI,qBAAK/D,UAAU,yCAAf,SACI,qBAAKA,UAAU,gEAAf,SACI,sBAAKA,UAAU,MAAf,UACI,0IAAuB,sBAAMA,UAAU,eAAhB,yCACvB,wBAAQA,UAAU,sBAAsB6D,QAAS,kBAAM2B,EAAmBF,IAA1E,oEACA,wBAAQtF,UAAU,sBAAsB6D,QAAS,kBAAMP,EAAQS,KAAK,WAApE,yDAKZ,sBAAK/D,UAAU,mCAAf,UACI,sBAAKA,UAAU,qCAAf,UACI,qBAAKA,UAAU,QAAf,SACI,uBAAOgE,QAAQ,YAAf,mCAEJ,qBAAKhE,UAAU,QAAf,SACI,uBAAOA,UAAU,qBAAqB3B,KAAK,OAAOyE,MAAOwC,EAASpE,UAAWpC,GAAG,YACzE4D,SAAU,SAACC,GAAD,OAAO4C,EAAY,2BAAID,GAAL,IAAepE,UAAWyB,EAAEE,OAAOC,iBAG9E,sBAAK9C,UAAU,qCAAf,UACI,qBAAKA,UAAU,QAAf,SACI,uBAAOgE,QAAQ,mBAAf,8GAEJ,qBAAKhE,UAAU,QAAf,SACI,0BAAUA,UAAU,qBAAqBmE,KAAK,IAAIrB,MAAOwC,EAASH,iBAAkBrG,GAAG,mBAChF4D,SAAU,SAACC,GAAD,OAAO4C,EAAY,2BAAID,GAAL,IAAeH,iBAAkBxC,EAAEE,OAAOC,iBAGrF,sBAAK9C,UAAU,qCAAf,UACI,qBAAKA,UAAU,QAAf,SACI,uBAAOgE,QAAQ,eAAf,6JAEJ,qBAAKhE,UAAU,QAAf,SACI,uBAAOA,UAAU,qBAAqB3B,KAAK,OAAOyE,MAAOwC,EAASF,aAActG,GAAG,eAC5E4D,SAAU,SAACC,GAAD,OAAO4C,EAAY,2BAAID,GAAL,IAAeF,aAAczC,EAAEE,OAAOC,iBAGjF,sBAAK9C,UAAU,qCAAf,UACI,qBAAKA,UAAU,QAAf,SACI,uBAAOgE,QAAQ,aAAf,0FAEJ,qBAAKhE,UAAU,QAAf,SACI,cAAC,IAAD,CAAYuE,UAAU,EACVlG,KAAK,OACLmG,OAAQ,gBAAEC,EAAF,EAAEA,OAAF,OAAcc,EAAY,2BAAID,GAAL,IAAeD,WAAYZ,aAGhF,qBAAKzE,UAAU,qCAAf,SACI,qBAAKA,UAAU,WAAf,SACKsF,EAASD,WAAc,qBAAKlF,IAAKmF,EAASD,WAAY/E,IAAI,sDAAgB,6BAAI,mBAAGN,UAAU,qCCerG0F,EAhFG,SAAC3F,GAEf,MAAgCmD,mBAAS,CAAChC,UAAW,aAAciE,iBAAkB,MAAOC,aAAc,MAAOC,WAAY,KAA7H,mBAAOC,EAAP,KAAiBC,EAAjB,KACMhD,EAASC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,UACpC7E,EAAW2F,cACXC,EAAUC,cAEhBsB,qBAAU,WACN,IAAIc,EAAcpD,EAAOuC,MAAK,SAAA9B,GAAK,OAAIA,EAAMf,MAAQlC,EAAMgF,MAAMC,OAAOlG,MACxEyG,EAAYI,KACd,IAEF,IAAMC,EAAqB,SAACN,GRuIL,IAACxG,EAAI+G,EQtIpBP,EAASpE,WAAaoE,EAASH,kBAAoBG,EAASF,cAAgBE,EAASD,aACrF3H,GRqIgBoB,EQrIKiB,EAAMgF,MAAMC,OAAOlG,GRqIpB+G,EQrIwBP,ERsI7C,SAAC5H,GAEJC,MAAM,uCAAyCmB,EAAI,CAC/ClB,OAAQ,OACRsB,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUwG,KAEpBhI,MAAK,SAAAC,GACF,IAAIA,EAASC,GAGT,MAAM,IAAIE,MAAMH,EAASI,OAAOC,YAFhCO,QAAQC,IAAIb,EAASE,WAK5BH,MAAK,kBAAMH,EAAS4B,QACpBd,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,SQtJ1B6E,EAAQS,KAAK,YAIrB,OACI,qCACI,qBAAK/D,UAAU,yCAAf,SACI,qBAAKA,UAAU,gEAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sJAAyB,sBAAMA,UAAU,eAAhB,yCACzB,wBAAQA,UAAU,sBAAsB6D,QAAS,kBAAM+B,EAAmBN,IAA1E,oEACA,wBAAQtF,UAAU,sBAAsB6D,QAAS,kBAAMP,EAAQS,KAAK,WAApE,yDAKZ,sBAAK/D,UAAU,mCAAf,UACI,sBAAKA,UAAU,qCAAf,UACI,qBAAKA,UAAU,QAAf,SACI,uBAAOgE,QAAQ,YAAf,mCAEJ,qBAAKhE,UAAU,QAAf,SACI,uBAAOA,UAAU,qBAAqB3B,KAAK,OAAOyE,MAAOwC,EAASpE,UAAWpC,GAAG,YACzE4D,SAAU,SAACC,GAAD,OAAO4C,EAAY,2BAAID,GAAL,IAAepE,UAAWyB,EAAEE,OAAOC,iBAG9E,sBAAK9C,UAAU,qCAAf,UACI,qBAAKA,UAAU,QAAf,SACI,uBAAOgE,QAAQ,mBAAf,8GAEJ,qBAAKhE,UAAU,QAAf,SACI,0BAAUA,UAAU,qBAAqBmE,KAAK,IAAIrB,MAAOwC,EAASH,iBAAkBrG,GAAG,mBAC7E4D,SAAU,SAACC,GAAD,OAAO4C,EAAY,2BAAID,GAAL,IAAeH,iBAAkBxC,EAAEE,OAAOC,iBAGxF,sBAAK9C,UAAU,qCAAf,UACI,qBAAKA,UAAU,QAAf,SACI,uBAAOgE,QAAQ,eAAf,6JAEJ,qBAAKhE,UAAU,QAAf,SACI,uBAAOA,UAAU,qBAAqB3B,KAAK,OAAOyE,MAAOwC,EAASF,aAActG,GAAG,eAC5E4D,SAAU,SAACC,GAAD,OAAO4C,EAAY,2BAAID,GAAL,IAAeF,aAAczC,EAAEE,OAAOC,iBAGjF,sBAAK9C,UAAU,qCAAf,UACI,qBAAKA,UAAU,QAAf,SACI,uBAAOgE,QAAQ,aAAf,0FAEJ,qBAAKhE,UAAU,QAAf,SACI,cAAC,IAAD,CAAYuE,UAAU,EACVlG,KAAK,OACLmG,OAAQ,gBAAEC,EAAF,EAAEA,OAAF,OAAcc,EAAY,2BAAID,GAAL,IAAeD,WAAYZ,aAGhF,qBAAKzE,UAAU,qCAAf,SACI,qBAAKA,UAAU,WAAf,SACKsF,EAASD,WAAc,qBAAKlF,IAAKmF,EAASD,WAAY/E,IAAI,sDAAgB,6BAAI,mBAAGN,UAAU,qCC5CrG8F,EA9BC,SAAC/F,GACb,IAAMrC,EAAW2F,cACjB,OACI,sBAAKrD,UAAU,YAAf,UACI,qBAAKA,UAAU,2EAAf,SACI,qBAAKA,UAAU,MAAf,SACI,0EAGR,qBAAKA,UAAU,2CAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,qGAAgB,iCAASD,EAAMF,MAAMkG,gBAArC,mDACA,qGAAgB,iCAAShG,EAAMQ,eAC/B,oIAAsB,uCAAUR,EAAMF,MAAMmG,cAA5C,OACA,wBAAQhG,UAAU,sBAAsB6D,QAAS,WAC7CnG,EAASkC,EAASG,EAAMF,QACxB,IAAIkC,EAAkBL,OAAO3B,EAAMF,MAAMkG,eAAiBrE,OAAO3B,EAAMgC,iBACvErE,EAASsB,EAAsBe,EAAMF,MAAMoG,aAAc,CAAClE,qBAC1DhC,EAAMmG,kBAAiB,GACvBnG,EAAMoG,QAAQ,aALlB,8DAQA,wBAAQnG,UAAU,wBAAwB6D,QAAS,kBAAM9D,EAAMoG,QAAQ,UAAvE,2DCyDLC,EA9ED,SAAC,GAAsB,IAArBD,EAAoB,EAApBA,QAAS/F,EAAW,EAAXA,MAEf1C,EAAW2F,cAYjB,OAAIjD,EAEI,qCACI,qBAAKJ,UAAU,yCAAf,SACI,sBAAKA,UAAU,gEAAf,UACI,sBAAKA,UAAU,MAAf,UACI,2DAAS,sBAAMA,UAAU,eAAhB,+CACT,wBAAQA,UAAU,sBAAsB6D,QAAS,kBAAMsC,EAAQ,UAA/D,0EACA,cAAC,IAAD,CAAMnE,GAAG,IAAT,SACI,wBAAQhC,UAAU,sBAAlB,0EAGR,sBAAKA,UAAU,kBAAf,UACI,6BAAKI,EAAMG,YACX,+BAAI,sBAAMP,UAAU,eAAhB,gCAAJ,gDAAwDI,EAAMc,qBAI1E,qBAAKlB,UAAU,kBAAf,SACI,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,QAAf,SACI,qBAAKG,IAAKC,EAAMC,WAAYC,IAAI,QAAQL,MAAM,MAAMC,OAAO,MACtDF,UAAU,sBAEnB,sBAAKA,UAAU,QAAf,UACI,4BAAII,EAAMI,wBACV,sBAAKR,UAAU,UAAf,UACI,8BAAG,mBAAGA,UAAU,uBAAhB,IAA2CI,EAAMe,aACjD,8BAAG,mBAAGnB,UAAU,qBAAhB,IAtCE,SAACU,GAC3B,IAKIU,EALU,IAAIP,KAAKH,GAAMW,wBAAmBC,EAAW,CACvDC,KAAM,UACNC,OAAQ,UACRC,OAAQ,YAEaV,MAAM,KAC/B,MAAM,GAAN,OAAUK,EAAW,GAArB,YAA2BA,EAAW,GAAtC,cAA8CM,OAAON,EAAW,IAAMM,OAAOtB,EAAMuB,eAAnF,YAAqGP,EAAW,GAAhH,aAAuHhB,EAAMuB,cAA7H,8BA+BiEC,CAAsBxB,EAAMa,cACrE,8BAAG,mBAAGjB,UAAU,4BAAhB,IAAgDI,EAAMyB,cACtD,8BAAG,mBAAG7B,UAAU,sBAAhB,qDAAmDI,EAAM0B,cAAgB1B,EAAM2B,gBAA/E,0CAGJ,4BAAI3B,EAAMoD,uBACV,uBACA,wHACA,4BAAIpD,EAAMqD,oBACV,8BAAG,mBAAGzD,UAAU,2BAAhB,IAA+CI,EAAMsD,uBACrD,8BAAG,mBAAG1D,UAAU,gCAAhB,8JACgBI,EAAMK,+BAQ1C/C,EAASD,KAEL,qBAAKuC,UAAU,yCAAf,SACI,sBAAKA,UAAU,gEAAf,UACI,yCACA,qBAAKA,UAAU,gCAAf,SACI,qBAAKA,UAAU,iBAAiBqG,KAAK,SAArC,SACI,sBAAMrG,UAAU,kBAAhB,mCC2GbsG,EAhLD,SAACvG,GAEX,MAAwCmD,mBAAS,IAAjD,mBAAOqD,EAAP,KAAqBC,EAArB,KACA,EAAgCtD,mBAAS,CACrCuD,WAAY,GACZC,YAAa,GACbC,YAAa,GACbZ,cAAe,EACfC,WAAY,EACZY,QAAS7G,EAAMjB,KANnB,mBAAO+H,EAAP,KAAiBC,EAAjB,KASIC,EAAmBhH,EAAMK,MAAM0B,cAAgB/B,EAAMK,MAAM2B,gBA0D/D,OACI,8BACI,sBAAK/B,UAAU,aAAf,UACI,sBAAKA,UAAU,2EAAf,UACI,qBAAKA,UAAU,QAAf,SACI,wJAEJ,sBAAKA,UAAU,QAAf,UACI,cAAC,IAAD,CAAMgC,GAAG,IAAT,SACI,wBAAQhC,UAAU,sBAAlB,uEAEJ,wBAAQA,UAAU,sBAAsB6D,QAAS,kBAAM9D,EAAMoG,QAAQ,UAArE,wDAMR,cAAC,EAAD,CAAc/F,MAAOL,EAAMK,QAC3B,qBAAKJ,UAAU,qCAAf,SACKuG,EAAe,qBAAKvG,UAAU,2BAAf,SAA2CuG,IAAsB,KAErF,sBAAKvG,UAAU,cAAf,UACI,qBAAKA,UAAU,UACf,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,sBAAMA,UAAU,mBAAmBlB,GAAG,WAAtC,SACI,mBAAGkB,UAAU,0BAEjB,uBACI,mBAAiB,WACjBA,UAAU,eACVgH,YAAY,8CACZC,UAAQ,EAAC5I,KAAK,OACdqE,SAAU,SAACC,GAAD,OACNmE,EAAY,2BAAID,GAAL,IAAeJ,WAAY9D,EAAEE,OAAOC,eAE3D,sBAAK9C,UAAU,mBAAf,UACI,sBAAMA,UAAU,mBAAmBlB,GAAG,YAAtC,SACI,mBAAGkB,UAAU,2BAEjB,uBACI,mBAAiB,gBACjBA,UAAU,eACVgH,YAAY,qGACZC,UAAQ,EAAC5I,KAAK,OACdqE,SAAU,SAACC,GAAD,OACNmE,EAAY,2BAAID,GAAL,IAAeH,YAAa/D,EAAEE,OAAOC,eAE5D,sBAAK9C,UAAU,mBAAf,UACI,sBAAMA,UAAU,mBAAmBlB,GAAG,YAAtC,SACI,mBAAGkB,UAAU,0BAEjB,uBACI,mBAAiB,YACjBA,UAAU,eACVgH,YAAY,4BACZC,UAAQ,EAAC5I,KAAK,OACdqE,SAAU,SAACC,GAAD,OACNmE,EAAY,2BAAID,GAAL,IAAeF,YAAahE,EAAEE,OAAOC,kBAKhE,sBAAK9C,UAAU,QAAf,UACI,4GAAmB+G,KACnB,uEACA,uBAAO/G,UAAU,sBAAsB8C,MAAO+D,EAASd,cAAe1H,KAAK,SAAS+F,IAAI,IACjFC,IAAK0C,EACLrE,SAAU,SAACC,GACPmE,EAAY,2BAAID,GAAL,IAAed,cAAepD,EAAEE,OAAOC,YAE7D,uBACA,kEAAY+D,EAASd,cAAgBhG,EAAMK,MAAMyB,iBAErD,qBAAK7B,UAAU,aAMnB,qBAAKA,UAAU,qCAAf,SACI,qBAAKA,UAAU,QAAf,SACI,wBAAQA,UAAU,kBAAkB6D,QAAS,WACrCgD,EAASJ,YAAcI,EAASH,aAAeG,EAASF,aACxD5G,EAAMmH,SAAS,CACXC,gBAAiBN,EAASJ,WAC1BW,iBAAkBP,EAASH,YAC3BW,iBAAkBR,EAASF,YAC3BZ,cAAec,EAASd,cACxBC,WAAYa,EAASd,cAAgBhG,EAAMK,MAAMyB,WACjDoE,aAAclG,EAAMjB,KAExBiB,EAAMoG,QAAQ,YAEdK,EAAgB,wGAZxB,mEC5HTc,EA7BE,SAACvH,GAEd,IAAIwH,EAAW,IAAI1G,KAAKd,EAAMK,MAAMa,WAAWH,qBAEzC0G,EAASC,6DAAgB1H,EAAMK,MAAM6B,IAAI,aAAalC,EAAMF,MAAMoC,IAExE,OACI,sBAAKjC,UAAU,YAAf,UACI,qBAAKA,UAAU,2EAAf,SACI,sBAAKA,UAAU,MAAf,UACI,uLACA,cAAC,IAAD,CAAMgC,GAAG,IAAT,SAAa,wBAAQhC,UAAU,sBAAlB,uEACb,wBAAQA,UAAU,sBAAlB,yEAGR,qBAAKA,UAAU,iCAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,6BAAKD,EAAMK,MAAMG,YACjB,4DAAWgH,KACX,mJAA4BxH,EAAMF,MAAMkG,iBACxC,qBAAK5F,IAAKqH,EAAQlH,IAAI,sDCY3BoH,EA5BI,SAAC3H,GAChB,MAAwBmD,mBAAS,SAAjC,mBAAOyE,EAAP,KAAaxB,EAAb,KACA,EAA0BjD,mBAAS,CAC/BiE,gBAAiB,GACjBC,iBAAkB,GAClBC,iBAAkB,GAClBtB,cAAe,EACfC,WAAY,EACZC,aAAclG,EAAMgF,MAAMC,OAAOlG,KANrC,mBAAOe,EAAP,KAAcqH,EAAd,KAQA,EAA0ChE,oBAAS,GAAnD,mBAAO0E,EAAP,KAAsB1B,EAAtB,KACM9F,EAAQoC,aAAY,SAAAC,GAAK,OAAIA,EAAMN,OAAO2C,MAAK,SAAA1E,GAAK,OAAIA,EAAM6B,MAAQlC,EAAMgF,MAAMC,OAAOlG,SAE/F,OAAQ6I,GACJ,IAAK,WACD,OAAQ,cAAC,EAAD,CAAUC,cAAeA,EAAe/H,MAAOA,EAAOO,MAAOA,IACzE,IAAK,UACD,OAAQ,cAAC,EAAD,CAASG,UAAWH,EAAMG,UAAWwB,gBAAiB3B,EAAM2B,gBAAiBlC,MAAOA,EAAOsG,QAASA,EAASD,iBAAkBA,IAC3I,IAAK,QACD,OAAQ,cAAC,EAAD,CAAO9F,MAAOA,EAAO+F,QAASA,IAC1C,IAAK,QACD,OAAQ,cAAC,EAAD,CAAOrH,GAAIiB,EAAMgF,MAAMC,OAAOlG,GAAIsB,MAAOA,EAAO8G,SAAUA,EAAUf,QAASA,IACzF,QACI,OAAQ,cAAC,EAAD,CAAO/F,MAAOA,EAAO+F,QAASA,MCzBlD,SAAS0B,EAAW9H,GAEhB,IAAMW,EAAO,IAAIG,KAAKd,EAAMK,MAAMa,WAUlC,OACI,+BACI,6BAAKlB,EAAMK,MAAQM,EAAKI,qBAAuB,QAC/C,6BAAKf,EAAMK,MAAQL,EAAMK,MAAMG,UAAY,QAC3C,6BAAKR,EAAMK,MAAQL,EAAMK,MAAMyB,WAAa,QAC5C,6BAAK9B,EAAMK,MAAN,UAAiBL,EAAMK,MAAM2B,gBAAkBhC,EAAMK,MAAM2B,gBAAkB,EAA7E,YAAkFhC,EAAMK,MAAM0B,eAAkB,QACrH,6BAAK/B,EAAMK,MAAQL,EAAMK,MAAM6B,IAAM,QAErC,+BACI,cAAC,IAAD,CAAMD,GAAI,UAAYjC,EAAMK,MAAM6B,IAAlC,SACI,wBAAQjC,UAAU,+BAAlB,SAAiD,mBAAGA,UAAU,kBAElE,cAAC,IAAD,CAAMgC,GAAI,eAAiBjC,EAAMK,MAAM6B,IAAvC,SACI,wBAAQjC,UAAU,+BAAlB,oBAEJ,wBAAQA,UAAU,+BAA+B6D,QAvBlC,WACvB,GAAIiE,OAAOC,QAAQ,8EAAmB,CAClC,IAAIjJ,EAAKiB,EAAMK,MAAM6B,IACrBlC,EAAMiI,mBAAmBlJ,KAoBrB,qBAOhB,IA8EemJ,EA9EI,WACf,IAAM9F,EAASK,aAAY,SAAAC,GAAK,OAAIA,EAAMN,UACpCI,EAASC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,UACpC7E,EAAW2F,cACjB,EAA2CH,mBAAS,OAApD,mBAAOgF,EAAP,KAAsBC,EAAtB,KAEMH,EAAqB,SAAClJ,GACxBpB,EAASmB,EAAUC,KA8BvB,OACI,sBAAKkB,UAAU,yCAAf,UACI,sBAAKA,UAAU,uCAAf,UACI,qBAAKA,UAAU,QAAf,SACI,6GAEJ,qBAAKA,UAAU,UAGf,qBAAKA,UAAU,QAAf,SACI,yBAASA,UAAU,kBAAkB0C,SAAU,SAACC,GAAD,OAAOwF,EAAkBxF,EAAEE,OAAOC,QAAjF,UACI,wBAAQA,MAAM,MAAd,gCACCP,EAAOH,KAAI,SAACY,GACT,OAAO,wBAAwBF,MAAOE,EAAM9B,UAArC,SAAiD8B,EAAM9B,WAA1C8B,EAAMf,gBAM1C,qBAAKjC,UAAU,cAAf,SACI,wBAAOA,UAAU,2CAAjB,UACI,gCACA,+BACI,0DACA,kFACA,0DACA,gEACA,oCACA,uFAGJ,gCA3DY,SAACmC,GACzB,OACIA,EAAOiG,OAAS,EACZjG,EAAOC,KAAI,SAAAhC,GAAK,OAAI,cAACyH,EAAD,CAAYG,mBAAoBA,EAAoB5H,MAAOA,GAC1CA,EAAM6B,QAAQI,UAEnD,+BACI,4CACA,qCACA,qCACA,qCACA,qCACA,wCAgDCgG,CAzCc,SAACnH,GAC5B,OAAQA,GACJ,IAAK,MACD,OAAOiB,EACX,QACI,OAAOA,EAAOgB,QAAO,SAAA/C,GAAK,OAAIA,EAAMc,YAAcA,MAoCzBoH,CAAuBJ,eCvG1DK,EAAY,SAACxI,GASf,OACI,+BACI,6BAAKA,EAAMiD,MAAM9B,YACjB,6BAAKnB,EAAMyI,iBAAiBzI,EAAMiD,MAAM9B,aACxC,6BAAKnB,EAAMiD,MAAMoC,eACjB,+BACI,cAAC,IAAD,CAAMpD,GAAI,WAAajC,EAAMiD,MAAMf,IAAnC,SACI,wBAAQjC,UAAU,+BAAlB,SAAiD,mBAAGA,UAAU,kBAElE,cAAC,IAAD,CAAMgC,GAAI,eAAiBjC,EAAMiD,MAAMf,IAAvC,SACI,wBAAQjC,UAAU,+BAAlB,oBAEJ,wBAAQA,UAAU,+BAA+B6D,QAnBlC,WACvB,GAAIiE,OAAOC,QAAQ,8EAAmB,CAClC,IAAIjJ,EAAKiB,EAAMiD,MAAMf,IACrBlC,EAAM0I,mBAAmB3J,KAgBrB,sBAwDD4J,EAlDI,WAEf,IAAMhL,EAAW2F,cACXd,EAASC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,UACpCJ,EAASK,aAAY,SAAAC,GAAK,OAAIA,EAAMN,UAEpCsG,EAAqB,SAAC3J,GACxBpB,Ef0ImB,SAACoB,GACxB,OAAO,SAACpB,GACJC,MAAM,gCAAkCmB,EAAI,CAAClB,OAAQ,WAChDC,MAAK,SAAAC,GACF,IAAIA,EAASC,GAIT,MAAM,IAAIE,MAAMH,EAASI,OAAOC,YAHhCT,EAAS4B,KACTZ,QAAQC,IAAR,yBAA8BG,EAA9B,iBehJH6J,CAAY7J,KAGnB0J,EAAmB,SAACtH,GAEtB,OADiBiB,EAAOgB,QAAO,SAAA/C,GAAK,OAAIA,EAAMc,YAAcA,KAC1CkH,QAGtB,OACI,sBAAKpI,UAAU,yCAAf,UACI,qBAAKA,UAAU,uCAAf,SACI,sLAEJ,qBAAKA,UAAU,cAAf,SACI,wBAAOA,UAAU,2CAAjB,UACI,gCACA,+BACI,oDACA,wHACA,4EACA,uFAGJ,gCACCuC,EAAO6F,OAAS,EACb7F,EAAOH,KAAI,SAAAY,GAAK,OAAI,cAAC,EAAD,CAAWwF,iBAAkBA,EAAkBC,mBAAoBA,EAAoBzF,MAAOA,GAC9EA,EAAMf,QAAQI,UAElD,+BACI,4CACA,qCACA,qCACA,mDClE5B,SAASuG,EAAW7I,GAEhB,IAAMW,EAAO,IAAIG,KAAKd,EAAMF,MAAMgJ,WAE5BnL,EAAW2F,cAMjB,OACI,+BACI,6BAAKtD,EAAMF,MAAQa,EAAKI,qBAAuB,QAC/C,6BAAKf,EAAMF,MAAQE,EAAMF,MAAMsH,gBAAkB,QACjD,6BAAKpH,EAAMF,MAAQE,EAAMF,MAAMuH,iBAAmB,QAClD,6BAAKrH,EAAMF,MAAQE,EAAMF,MAAMwH,iBAAmB,QAClD,6BAAKtH,EAAMF,MAAQE,EAAMF,MAAMoG,aAAe,QAC9C,6BAAKlG,EAAMF,MAAQE,EAAMF,MAAMkG,cAAgB,QAC/C,6BAAKhG,EAAMF,MAAN,UAAiBE,EAAMF,MAAMmG,YAAe,QACjD,+BACI,wBAAQhG,UAAU,+BAA+B6D,QAdlC,WhB+NN,IAAC/E,EAAI8H,EAASb,EgB9N/BrI,GhB8NkBoB,EgB9NCiB,EAAMF,MAAMoC,IhB8NT2E,EgB9Nc7G,EAAMF,MAAMoG,ahB8NjBF,EgB9N+BhG,EAAMF,MAAMkG,chB+NvE,SAACrI,GACJC,MAAM,gCAAkCmB,EAAI,CAAClB,OAAQ,WAChDC,MAAK,SAAAC,GACF,IAAIA,EAASC,GAgBT,MAAM,IAAIE,MAAMH,EAASI,OAAOC,YAfhCR,MAAM,gCAAkCiJ,EAAQ,CAAChJ,OAAQ,QACpDC,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAMH,EAASI,OAAOC,eAGvCN,MAAK,SAAAuC,GACF,IAAInB,EAAkByC,OAAOtB,EAAM2B,iBAAmBL,OAAOqE,GAC7DrI,EAASsB,EAAsB4H,EAAS,CAAC7E,gBAAgB9C,QAEjEvB,EAAS+B,KACTf,QAAQC,IAAR,yBAA8BG,EAA9B,oBgBnOJ,eACA,cAAC,IAAD,CAAMkD,GAAI,WAAajC,EAAMF,MAAMoC,IAAnC,SACI,wBAAQjC,UAAU,+BAAlB,SAAiD,mBAAGA,UAAU,wBAQlF,IA0Ee8I,EA1EI,WACf,IAAMC,EAASvG,aAAY,SAAAC,GAAK,OAAIA,EAAMsG,UACpC5G,EAASK,aAAY,SAAAC,GAAK,OAAIA,EAAMN,UAE1C,EAAgDe,mBAAS,OAAzD,mBAAO8F,EAAP,KAAyBC,EAAzB,KA6BA,OACI,sBAAKjJ,UAAU,yCAAf,UACI,sBAAKA,UAAU,uCAAf,UACI,qBAAKA,UAAU,MAAf,SACI,2FAEJ,qBAAKA,UAAU,MAAf,SACI,yBAAQA,UAAU,kBAAkB0C,SAAU,SAACC,GAC3CsG,EAAoBtG,EAAEE,OAAOC,QADjC,UAGI,wBAAQA,MAAM,MAAd,gCACCX,EAAOC,KAAI,SAAChC,GACT,OAAO,wBAAwB0C,MAAO1C,EAAM6B,IAArC,SAA2C7B,EAAMG,WAApCH,EAAM6B,gBAK1C,qBAAKjC,UAAU,cAAf,SACI,wBAAOA,UAAU,2CAAjB,UACI,gCACA,+BACI,0DACA,+FACA,4EACA,wCACA,+EACA,iEACA,gEACA,uFAGJ,gCA1Dc,SAAC+I,GAC3B,OACIA,EAAOX,OAAS,EACZW,EAAO3G,KAAI,SAAAvC,GAAK,OAAI,cAAC+I,EAAD,CAAY/I,MAAOA,GAAYA,EAAMoC,QAAQI,UAEjE,+BACI,4CACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,wCA8CC6G,CAzCQ,SAACpK,GACtB,OAAQA,GACJ,IAAK,MACD,OAAOiK,EACX,QACI,OAAOA,EAAO5F,QAAO,SAAAtD,GAAK,OAAIA,EAAMoG,eAAiBnH,MAoC1BqK,CAAiBH,eCxE7CI,EAzBU,WACrB,OACI,qBAAKpJ,UAAU,yCAAf,SACI,qBAAKA,UAAU,0DAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sGAAiB,sBAAMA,UAAU,eAAhB,8EACjB,cAAC,IAAD,CAAMgC,GAAG,IAAT,SACI,wBAAQ3D,KAAK,SAAS2B,UAAU,sBAAhC,wEAEJ,cAAC,IAAD,CAAMgC,GAAG,gBAAT,SACI,wBAAQhC,UAAU,sBAAlB,iHAEJ,cAAC,IAAD,CAAMgC,GAAG,gBAAT,SACI,wBAAQhC,UAAU,sBAAlB,yIAEJ,cAAC,IAAD,CAAMgC,GAAG,iBAAT,SACI,wBAAQhC,UAAU,sBAAlB,iGCATqJ,EAZI,WACf,OACI,qCACI,cAAC,EAAD,IACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QC0BDC,EAnCG,SAACvJ,GAEf,IAAMuD,EAAUC,cACV1D,EAAQ2C,aAAY,SAAAC,GAAK,OAAIA,EAAMsG,OAAOjE,MAAK,SAAAjF,GAAK,OAAIA,EAAMoC,MAAQlC,EAAMgF,MAAMC,OAAOlG,SAI/F,OACI,qCACI,qBAAKkB,UAAU,yCAAf,SACI,qBAAKA,UAAU,gEAAf,SACI,sBAAKA,UAAU,MAAf,UACI,4GAAkB,sBAAMA,UAAU,eAAhB,qDAClB,wBAAQA,UAAU,sBAAlB,oEACA,wBAAQA,UAAU,sBAAsB6D,QAAS,kBAAMP,EAAQS,KAAK,WAApE,yDAIZ,qBAAK/D,UAAU,mCAAf,SACI,qBAAKA,UAAU,iCAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,iGAAkBH,EAAQA,EAAMsH,gBAAkB,gBAClD,mJAA4BtH,EAAQA,EAAMkG,cAAgB,gBAC1D,yHAAsBlG,EAAQA,EAAMuH,iBAAmB,gBACvD,qFAAqBvH,EAAQA,EAAMwH,iBAAmB,gBACtD,oHAAsBxH,EAAQA,EAAMmG,WAAa,gBACjD,qBAAK7F,IAAKN,EAAQ4H,6DAAgB5H,EAAMoG,aAAa,eAAepG,EAAMsH,gBAAkB,GAAI7G,IAAI,wDCoF7GiJ,EA9GS,SAACxJ,GAErB,IAAMoC,EAASK,aAAY,SAAAC,GAAK,OAAIA,EAAMN,UAC1C,EAA0Be,mBAAS,IAAnC,mBAAO9C,EAAP,KAAcoJ,EAAd,KACA,EAAgCtG,mBAAS,CAAC6C,cAAc,IAAxD,mBAAOc,EAAP,KAAiBC,EAAjB,KAEIC,EAAmB3G,EAAM6B,IAAM7B,EAAM0B,cAAgB1B,EAAM2B,gBAAkB,KAmBjF,OACI,sBAAK/B,UAAU,mCAAf,UACI,sBAAKA,UAAU,cAAf,UACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,yBAAQA,UAAU,kBAAkB0C,SAAU,SAACC,GAC3CmE,EAAY,2BAAID,GAAL,IAAeD,QAASjE,EAAEE,OAAOC,SAC5C,IAAI1C,EAAQ+B,EAAO2C,MAAK,SAAA1E,GAAK,OAAIA,EAAM6B,MAAQU,EAAEE,OAAOC,SACxD0G,EAASpJ,GACT1B,QAAQC,IAAIyB,EAAM0B,cAAgB1B,EAAM2B,kBAJ5C,UAMI,wBAAQgB,QAAM,EAAd,gJACCZ,EAAOC,KAAI,SAAChC,GACT,OAAO,wBAAwB0C,MAAO1C,EAAM6B,IAArC,SAA2C7B,EAAMG,WAApCH,EAAM6B,aAItC,sBAAKjC,UAAU,mBAAf,UACQ,sBAAMA,UAAU,mBAAmBlB,GAAG,WAAtC,SACI,mBAAGkB,UAAU,0BAErB,uBACI,mBAAiB,WACjBA,UAAU,eACVgH,YAAY,8CACZC,UAAQ,EAAC5I,KAAK,OACdqE,SAAU,SAACC,GAAD,OACNmE,EAAY,2BAAID,GAAL,IAAeM,gBAAiBxE,EAAEE,OAAOC,eAEhE,sBAAK9C,UAAU,mBAAf,UACQ,sBAAMA,UAAU,mBAAmBlB,GAAG,YAAtC,SACI,mBAAGkB,UAAU,2BAErB,uBACI,mBAAiB,gBACjBA,UAAU,eACVgH,YAAY,qGACZC,UAAQ,EAAC5I,KAAK,OACdqE,SAAU,SAACC,GAAD,OACNmE,EAAY,2BAAID,GAAL,IAAeO,iBAAkBzE,EAAEE,OAAOC,eAEjE,sBAAK9C,UAAU,mBAAf,UACQ,sBAAMA,UAAU,mBAAmBlB,GAAG,YAAtC,SACI,mBAAGkB,UAAU,0BAErB,uBACI,mBAAiB,YACjBA,UAAU,eACVgH,YAAY,4BACZC,UAAQ,EAAC5I,KAAK,OACdqE,SAAU,SAACC,GAAD,OACNmE,EAAY,2BAAID,GAAL,IAAeQ,iBAAkB1E,EAAEE,OAAOC,kBAGrE,sBAAK9C,UAAU,QAAf,UACI,4GAAmB+G,KACnB,uEACA,uBAAO/G,UAAU,sBAAsB8C,MAAO+D,EAASd,cAAe1H,KAAK,SAAS+F,IAAI,IACjFC,IAAK0C,EACLrE,SAAU,SAACC,GACPmE,EAAY,2BAAID,GAAL,IAAed,cAAepD,EAAEE,OAAOC,YAE7D,uBACC+D,EAASd,cAAgB,kEAAYc,EAASd,cAAgB3F,EAAMyB,cAAkB,gCAE3F,sBAAK7B,UAAU,QAAf,UACI,qGAAgB,iCAAS6G,EAASd,gBAAlC,mDACA,oIACa,uCAAUc,EAASd,cAAgBc,EAASd,cAAgB3F,EAAMyB,WAAa,KAD5F,OAGCzB,EAAM6B,KAAQP,OAAOtB,EAAM0B,eAAiBJ,OAAOtB,EAAM2B,iBAAoB,EAAI,wBAAQ/B,UAAU,kBAAkB6D,QAvFpH,WACVgD,EAASM,iBAAmBN,EAASO,kBAClCP,EAASQ,kBAAoBR,EAASd,eACzChG,EAAMmH,SAAS,CACXC,gBAAiBN,EAASM,gBAC1BC,iBAAkBP,EAASO,iBAC3BC,iBAAkBR,EAASQ,iBAC3BtB,cAAec,EAASd,cACxBC,WAAYa,EAASd,cAAgB3F,EAAMyB,WAC3CoE,aAAc7F,EAAM6B,MAExBlC,EAAMoG,SAAQ,IAEdpG,EAAM0J,YAAY,8IA0EwE,yDAA4E,6BAC7JrJ,EAAM6B,KAAQP,OAAOtB,EAAM0B,eAAiBJ,OAAOtB,EAAM2B,kBAAqB,EAAI,4BAAG,sBAClF/B,UAAU,gCADwE,sGACV,mCAIpF,qBAAKA,UAAU,qCAAf,SACI,8BACKI,EAAM6B,IAAO,cAAC,EAAD,CAAc7B,MAAOA,IAAW,qCC7DnDsJ,EAxCY,SAAC3J,GACxB,IACMK,EADSoC,aAAY,SAAAC,GAAK,OAAIA,EAAMN,UACrB2C,MAAK,SAAA1E,GAAK,OAAIA,EAAM6B,IAAMlC,EAAMF,MAAMoG,gBAErDvI,EAAW2F,cACXC,EAAUC,cAGViE,EAASC,6DAAoBrH,EAAM6B,IAAM,eAAiBlC,EAAMF,MAAMsH,gBAS5E,OACI,sBAAKnH,UAAU,YAAf,UACI,sBAAKA,UAAU,qCAAf,UACI,sBAAKA,UAAU,QAAf,UACI,iMACA,4GAAmBD,EAAMF,MAAMsH,mBAC/B,oIAAuBpH,EAAMF,MAAMuH,oBACnC,gGAAsBrH,EAAMF,MAAMwH,oBAClC,6MAAoCtH,EAAMF,MAAMkG,iBAChD,sGAAkBhG,EAAMF,MAAMmG,cAC9B,6EAAa5F,EAAMG,gBAEvB,sBAAKP,UAAU,SAAf,UAAwB,qBAAKG,IAAKqH,EAAQlH,IAAI,6CAC1C,wBAAQN,UAAU,sBAAsB6D,QApBtC,WACdnG,EAASkC,EAASG,EAAMF,QACxB,IAAIkC,EAAkBL,OAAO3B,EAAMF,MAAMkG,eAAiBrE,OAAOtB,EAAM2B,iBACvErE,EAASsB,EAAsBe,EAAMF,MAAMoG,aAAc,CAAClE,qBAC1DuB,EAAQS,KAAK,WAgBD,oEAKR,cAAC,EAAD,CAAc3D,MAAOA,QCDlBuJ,EAnCK,WAEhB,MAAuBzG,oBAAS,GAAhC,mBAAOyE,EAAP,KAAYxB,EAAZ,KAEA,EAA+BjD,mBAAS,IAAxC,mBAAO0G,EAAP,KAAgBH,EAAhB,KAEA,EAAyBvG,mBAAS,CAC9BiE,gBAAiB,GACjBC,iBAAkB,GAClBC,iBAAkB,GAClBtB,cAAe,EACfC,WAAY,EACZC,aAAc,KANlB,mBAAOpG,EAAP,KAAaqH,EAAb,KASM5D,EAAUC,cAEhB,OACI,qCACI,qBAAKvD,UAAU,yCAAf,SACI,sBAAKA,UAAU,gEAAf,UACI,sBAAKA,UAAU,MAAf,UACI,wHAAoB,sBAAMA,UAAU,eAAhB,qDACpB,wBAAQA,UAAU,sBAAsB6D,QAAS,kBAAMP,EAAQS,KAAK,WAApE,qDAEH6F,EAAW,qBAAK5J,UAAU,MAAf,SAAqB,6BAAI,iCAAQ,sBACzCA,UAAU,gCAD+B,SACE4J,UAAuC,kCAG7FjC,EAAO,cAAC,EAAD,CAAiB8B,YAAaA,EAAatD,QAASA,EAASe,SAAUA,EAAUrH,MAAOA,IAC5F,cAAC,EAAD,CAAoBA,MAAOA,QChC3C,SAASgI,EAAW9H,GAEhB,IAAMW,EAAO,IAAIG,KAAKd,EAAMK,MAAMa,WAElC,OACI,+BACI,6BAAKlB,EAAMK,MAAQM,EAAKI,qBAAuB,QAC/C,6BAAKf,EAAMK,MAAQL,EAAMK,MAAMG,UAAY,QAC3C,6BAAKR,EAAMK,MAAQL,EAAMK,MAAMyB,WAAa,QAC5C,6BAAK9B,EAAMK,MAAN,UAAiBL,EAAMK,MAAM2B,gBAAkBhC,EAAMK,MAAM2B,gBAAkB,EAA7E,YAAkFhC,EAAMK,MAAM0B,eAAkB,QACrH,6BACI,cAAC,IAAD,CAAME,GAAI,UAAYjC,EAAMK,MAAM6B,IAAlC,SACI,wBAAQjC,UAAU,+BAAlB,SAAiD,mBAAGA,UAAU,uBAQlF,IAgDe6J,EAhDS,SAAC9J,GAErB,IAA6BoC,EAkB7B,OACI,sBAAKnC,UAAU,yCAAf,UACI,qBAAKA,UAAU,uCAAf,SACI,qBAAKA,UAAU,QAAf,SACI,4GAAmBD,EAAMoC,OAAO,GAAKpC,EAAMoC,OAAO,GAAGjB,UAAY,oCAGzE,qBAAKlB,UAAU,cAAf,SACI,wBAAOA,UAAU,2CAAjB,UACI,gCACA,+BACI,0DACA,kFACA,0DACA,gEACA,6BAAI,wBAAQA,UAAU,6BAAlB,SAAgD,mBAAGA,UAAU,uBAGrE,iCApCamC,EAqCQpC,EAAMoC,OAnCnCA,EAAOiG,OAAS,EACZjG,EAAOC,KAAI,SAAAhC,GAAK,OAAI,cAAC,EAAD,CAAYA,MAAOA,GACFA,EAAM6B,QAE3C,+BACI,4CACA,qCACA,qCACA,qCACA,oDCGL6H,EAlCG,SAAC/J,GAEf,IAAMuD,EAAUC,cAEVP,EAAQR,aAAY,SAAAC,GAAK,OAAIA,EAAMF,OAAOuC,MAAK,SAAA9B,GAAK,OAAIA,EAAMf,MAAQlC,EAAMgF,MAAMC,OAAOlG,SACzFqD,EAASK,aAAY,SAAAC,GAAK,OAAIA,EAAMN,OAAOgB,QAAO,SAAA/C,GAAK,OAAIA,EAAMc,YAAc8B,EAAM9B,gBAG3F,OACI,qCACI,qBAAKlB,UAAU,yCAAf,SACI,qBAAKA,UAAU,gEAAf,SACI,sBAAKA,UAAU,MAAf,UACI,4GAAkB,sBAAMA,UAAU,eAAhB,yCAClB,wBAAQA,UAAU,sBAAsB6D,QAAS,kBAAMP,EAAQS,KAAK,MAApE,4EAIZ,qBAAK/D,UAAU,mCAAf,SACI,qBAAKA,UAAU,iCAAf,SACI,sBAAKA,UAAU,kBAAf,UACKgD,EAAQ,+EAAeA,EAAM9B,aAAkB,8FAC/C8B,EAAQ,kGAAmBA,EAAMmC,oBAAyB,8FAC1DnC,EAAQ,yHAAsBA,EAAMoC,gBAAqB,8FACzDpC,EAAQ,qBAAK7C,IAAK6C,EAAMqC,WAAY/E,IAAK,OAAU,8FACnD0C,EAAQ,+DAAcA,EAAMf,OAAY,qGAIrD,cAAC,EAAD,CAAiBE,OAAQA,QCYtB4H,OA9Bf,WAEI,IAAMrM,EAAW2F,cAQjB,OANAwB,qBAAU,WACNnH,EAASD,KACTC,EAAS4B,KACT5B,EAAS+B,OACV,IAGC,eAAC,IAAD,WACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOuK,KAAK,IAAIC,OAAK,EAACC,UAAWjH,IACjC,cAAC,IAAD,CAAO+G,KAAK,aAAaE,UAAWxC,IACpC,cAAC,IAAD,CAAOsC,KAAK,iBAAiBE,UAAW9G,IACxC,cAAC,IAAD,CAAO4G,KAAK,kBAAkBE,UAAWxF,IACzC,cAAC,IAAD,CAAOsF,KAAK,cAAcE,UAAWJ,IACrC,cAAC,IAAD,CAAOE,KAAK,gBAAgBE,UAAWhF,IACvC,cAAC,IAAD,CAAO8E,KAAK,kBAAkBE,UAAWxE,IACzC,cAAC,IAAD,CAAOsE,KAAK,cAAcE,UAAWZ,IACrC,cAAC,IAAD,CAAOU,KAAK,iBAAiBE,UAAWP,IACxC,cAAC,IAAD,CAAOK,KAAK,SAASE,UAAWb,IAChC,cAAC,IAAD,CAAOW,KAAK,IAAIE,UAAW,kBAAM,oBAAIlK,UAAU,cAAd,iCAEjC,mBAAGA,UAAU,kBAAb,qF,SCvCVmK,GAAe,CACjBC,KAAM,QACNjI,OAAO,GACPI,OAAO,GACPwG,OAAO,I,kBCDEsB,GAAQC,wBDGE,WAAmC,IAAlC7H,EAAiC,uDAAzB0H,GAAcI,EAAW,uCACrD,OAAQA,EAAOlM,MACX,KAAKhB,EACD,OAAO,2BAAIoF,GAAX,IAAkBN,OAAQoI,EAAOjM,UACrC,KAAKhB,EACD,OAAO,2BAAImF,GAAX,IAAkBF,OAAQgI,EAAOjM,UACrC,KAAKf,EACD,OAAO,2BAAIkF,GAAX,IAAkBN,OAAQM,EAAMN,OAAOgB,QAAO,SAAA/C,GAAK,OAAIA,EAAM6B,MAAQsI,EAAOjM,aAChF,KAAKd,EACD,OAAO,2BAAIiF,GAAX,IAAkBsG,OAAQwB,EAAOjM,UACrC,QACI,OAAOmE,KCduB+H,+BAAoBC,2BAAgBC,QCC9EC,IAASC,OACL,cAAC,IAAD,CAAUP,MAAOA,GAAjB,SACI,cAAC,GAAD,MAEJQ,SAASC,eAAe,W","file":"static/js/main.dcd0f961.chunk.js","sourcesContent":["export const SET_EVENTS = \"SET_EVENTS\";\nexport const SET_GUIDES = \"SET_GUIDES\";\nexport const DELL_EVENT = \"DELL_EVENT\";\nexport const SET_ORDERS = \"SET_ORDERS\";\n\n//   ----------------EVENTS----------------------\n\nexport const setEvents = (eventsArr) => ({\n    type: SET_EVENTS,\n    payload: eventsArr\n})\n\nexport const getEvents = () => {\n    return (dispatch) => {\n        fetch(\"http://localhost:5000/events/\", {method: \"GET\"})\n            .then(response => {\n                if (response.ok) {\n                    return response.json();\n                } else {\n                    throw new Error(response.status.toString());\n                }\n            })\n            .then(eventsArr => dispatch(setEvents(eventsArr)))\n            .catch(err => console.log(err.message));\n    }\n}\n\n\nexport const deleteEvent = (id) => ({\n    type: DELL_EVENT,\n    payload: id\n})\n\nexport const dellEvent = (id) => {\n    return (dispatch) => {\n        fetch(\"http://localhost:5000/events/\" + id, {method: \"DELETE\"})\n            .then(response => {\n                if (response.ok) {\n                    dispatch(deleteEvent(id));\n                    console.log(`Event with id: ${id} deleted`);\n                } else {\n                    throw new Error(response.status.toString());\n                }\n            })\n    }\n}\n\nexport const createEvent = (newEvent) => {\n    return (dispatch) => {\n        fetch(\"http://localhost:5000/events/add\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(newEvent)\n        })\n            .then(response => {\n                if (response.ok) {\n                    console.log(response.json());\n                } else {\n                    throw new Error(response.status.toString());\n                }\n            })\n            .then(() => dispatch(getEvents()))\n            .catch(err => console.log(err));\n    }\n}\n\nexport const updateEvent = (id, updatedEvent) => {\n    return (dispatch) => {\n        fetch(\"http://localhost:5000/events/update/\" + id, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(updatedEvent)\n        })\n            .then(response => {\n                if (response.ok) {\n                    console.log(response.json());\n                } else {\n                    throw new Error(response.status.toString());\n                }\n            })\n            .then(() => dispatch(getEvents()))\n            .catch(err => console.log(err));\n    }\n}\n\nexport const updateEventRegistered = (id, updatedEventReg) => {\n    return (dispatch) => {\n        fetch(\"http://localhost:5000/events/patch_registered/\" + id, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(updatedEventReg)\n        })\n            .then(response => {\n                if (response.ok) {\n                    console.log(response.json());\n                } else {\n                    throw new Error(response.status.toString());\n                }\n            })\n            .then(() => dispatch(getEvents()))\n            .catch(err => console.log(err));\n    }\n}\n\n//   ----------------GUIDES----------------------\n\n\nexport const setGuides = (guidesArr) => ({\n    type: SET_GUIDES,\n    payload: guidesArr\n})\n\nexport const getGuides = () => {\n    return (dispatch) => {\n        fetch(\"http://localhost:5000/guides/\", {method: \"GET\"})\n            .then(response => {\n                if (response.ok) {\n                    return response.json();\n                } else {\n                    throw new Error(response.status.toString());\n                }\n            })\n            .then(guidesArr => dispatch(setGuides(guidesArr)))\n            .catch(err => console.log(err));\n    }\n}\n\nexport const createGuide = (newGuide) => {\n    return (dispatch) => {\n        fetch(\"http://localhost:5000/guides/add\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(newGuide)\n        })\n            .then(response => {\n                if (response.ok) {\n                    console.log(response.json());\n                } else {\n                    throw new Error(response.status.toString());\n                }\n            })\n            .then(() => dispatch(getGuides()))\n            .catch(err => console.log(err));\n    }\n}\n\nexport const updateGuide = (id, updatedGuide) => {\n    return (dispatch) => {\n\n        fetch(\"http://localhost:5000/guides/update/\" + id, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(updatedGuide)\n        })\n            .then(response => {\n                if (response.ok) {\n                    console.log(response.json());\n                } else {\n                    throw new Error(response.status.toString());\n                }\n            })\n            .then(() => dispatch(getGuides()))\n            .catch(err => console.log(err));\n    }\n}\n\n\nexport const deleteGuide = (id) => {\n    return (dispatch) => {\n        fetch(\"http://localhost:5000/guides/\" + id, {method: \"DELETE\"})\n            .then(response => {\n                if (response.ok) {\n                    dispatch(getGuides());\n                    console.log(`Guide with id: ${id} deleted`);\n                } else {\n                    throw new Error(response.status.toString());\n                }\n            })\n    }\n}\n\n// ------------------------ ORDERS ---------------------------------\n\nexport const setOrders = (ordersArr) => ({\n    type: SET_ORDERS,\n    payload: ordersArr\n})\n\nexport const getOrders = () => {\n    return (dispatch) => {\n        fetch(\"http://localhost:5000/orders/\", {method: \"GET\"})\n            .then(response => {\n                if (response.ok) {\n                    return response.json();\n                } else {\n                    throw new Error(response.status.toString());\n                }\n            })\n            .then(ordersArr => dispatch(setOrders(ordersArr)))\n            .catch(err => console.log(err.message));\n    }\n}\n\nexport const addOrder = (order) => {\n    return (dispatch) => {\n        fetch(\"http://localhost:5000/orders/add\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(order)\n        })\n            .then(response => {\n                if (response.ok) {\n                    console.log(response.json());\n                } else {\n                    throw new Error(response.status.toString());\n                }\n            })\n            .then(() => dispatch(getOrders()))\n            .catch(err => console.log(err));\n    }\n}\n\nexport const dellOrder = (id, eventId, orderQuantity) => {\n    return (dispatch) => {\n        fetch(\"http://localhost:5000/orders/\" + id, {method: \"DELETE\"})\n            .then(response => {\n                if (response.ok) {\n                    fetch(\"http://localhost:5000/events/\" + eventId,{method: \"GET\"})\n                        .then(response => {\n                            if (response.ok) {\n                                return response.json();\n                            } else {\n                                throw new Error(response.status.toString());\n                            }\n                        })\n                        .then(event => {\n                            let updatedEventReg = Number(event.eventRegistered) - Number(orderQuantity);\n                            dispatch(updateEventRegistered(eventId, {eventRegistered:updatedEventReg}));\n                        });\n                    dispatch(getOrders());\n                    console.log(`Order with id: ${id} deleted`);\n                } else {\n                    throw new Error(response.status.toString());\n                }\n            })\n    }\n}","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nconst MainEventsLI = (props) => {\n\n    const dateFormatHandler = (date) => {\n        let newDateString = new Date(date).toLocaleDateString();\n        let newDateStringArr = newDateString.split(\".\");\n        let month;\n        switch (newDateStringArr[1]) {\n            case \"02\":\n                month = \"Февраля\";\n                break;\n            case \"03\":\n                month = \"Марта\";\n                break;\n            case \"04\":\n                month = \"Апреля\";\n                break;\n            case \"05\":\n                month = \"Май\";\n                break;\n            case \"06\":\n                month = \"Июня\";\n                break;\n            case \"07\":\n                month = \"Июля\";\n                break;\n            case \"08\":\n                month = \"Августа\";\n                break;\n            case \"09\":\n                month = \"Сентября\";\n                break;\n            case \"10\":\n                month = \"Октября\";\n                break;\n            case \"11\":\n                month = \"Ноября\";\n                break;\n            case \"12\":\n                month = \"Декабря\";\n                break;\n            default: {\n                month = \"Января\"\n            }\n\n        }\n        return `${newDateStringArr[0]} ${month}`\n    }\n\n    const durationStringHandler = (date) => {\n        let newTime = new Date(date).toLocaleTimeString(undefined, {\n            hour: '2-digit',\n            minute: '2-digit',\n            second: '2-digit',\n        });\n        let newTimeArr = newTime.split(\":\");\n        return `${newTimeArr[0]}.${newTimeArr[1]} - ${Number(newTimeArr[0]) + Number(props.event.eventDuration)}.${newTimeArr[1]} (${props.event.eventDuration} часа)`\n    }\n\n    return (\n\n        <div className=\"row border border-success m-2 p-2 bg-secondary text-dark bg-opacity-25 align-items-center\">\n            <div className=\"col\">\n                <img width=\"150\" height=\"150\" src={props.event.eventPhoto} alt=\"Event\"\n                     className=\"rounded mx-auto border border-success\"/>\n            </div>\n            <div className=\"col-6\">\n                <h3>{props.event.eventName}</h3>\n                <p>{props.event.eventShortDescription}</p>\n                <hr/>\n                <p> Уровень сложности материала: {props.event.eventDifficulty}</p>\n            </div>\n            <div className=\"col\">\n                <p>{dateFormatHandler(props.event.eventDate)}</p>\n                <p>Ваш гид: {props.event.guideName}</p>\n            </div>\n            <div className=\"col p-0\">\n                <p><i className=\"bi bi-geo-alt-fill\"></i> {props.event.eventCity}</p>\n                <p><i className=\"bi bi-clock-fill\"></i> {durationStringHandler(props.event.eventDate)}</p>\n                <p><i className=\"bi bi-currency-exchange\"></i> ${props.event.eventPrice}</p>\n                <p><i className=\"bi bi-people-fill\"></i> Осталось {props.event.eventCapacity - props.event.eventRegistered} мест(а)</p>\n                <Link to={\"/event/\" + props.event._id}>\n                    <button className=\"btn btn-success\">Подробнее</button>\n                </Link>\n            </div>\n        </div>\n    )\n}\n\nexport default MainEventsLI;","import React from 'react';\nimport MainEventsLI from \"./MainEventsLI\";\n\n\nconst MainEventsList = (props) => {\n\n    return (\n        <div className=\"container-fluid justify-content-center\">\n            {props.events.map(event => <MainEventsLI key={event._id} event={event}/>).reverse()}\n        </div>\n    );\n}\n\nexport default MainEventsList;","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport {useSelector} from \"react-redux\";\n\nconst MainHeader = (props) => {\n\n    const guides = useSelector(state => state.guides);\n\n    return (\n        <div className=\"container-fluid justify-content-center\">\n            <div className=\"row order m-2 p-2 bg-success bg-opacity-75 align-items-center\">\n                <div className=\"col\">\n                    <table className=\"table table-borderless\">\n                        <thead>\n                        <tr>\n                            <th>Гид</th>\n                            <th>Город</th>\n                            <th>Уровень</th>\n                            <th>Все/Предстоящие</th>\n                            <th><h2><i className=\"bi bi-clipboard-data text-warning\"></i></h2></th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr>\n                            <th>\n                                <select className=\"form-select\" onChange={(e)=>{\n                                    props.setGuide(e.target.value);\n                                }}>\n                                    <option hidden>Выбери гида</option>\n                                    <option value=\"all\" >Все</option>\n\n                                    {guides.map((guide) => {\n                                        return <option key={guide._id} value={guide.guideName}>{guide.guideName}</option>\n                                    })}\n                                </select>\n                            </th>\n\n                            <th>\n                                <select className=\"form-select\">\n                                    <option hidden>Выберите город</option>\n                                </select>\n                            </th>\n                            <th>\n                                <select className=\"form-select\">\n                                    <option hidden>Выбери уровень</option>\n                                    <option>Турист(обзорная)</option>\n                                    <option>Местный(тематическая)</option>\n                                    <option>Сам гидом могу</option>\n                                    <option>Любой</option>\n                                </select>\n                            </th>\n                            <th>\n                                <div className=\"form-check form-switch\">\n                                    <input className=\"form-check-input bg-warning m-auto\" type=\"checkbox\"/>\n                                </div>\n                            </th>\n                            <th>\n                                <Link to=\"/admin\">\n                                    <button className=\"btn btn-warning btn-sm p-2 \">Админ панель</button>\n                                </Link>\n                            </th>\n                        </tr>\n                        </tbody>\n                    </table>\n\n                </div>\n            </div>\n        </div>\n\n    );\n};\n\nexport default MainHeader;","import React, {useState} from 'react';\nimport MainEventsList from \"./MainEventsList\";\nimport MainHeader from \"./MainHeader\";\nimport {useSelector} from \"react-redux\";\n\nconst Main = () => {\n\n    const events = useSelector(state => state.events);\n\n    const [guide,setGuide] = useState(\"all\");\n    const [allAndFuture,setAllAndFuture] = useState(\"all\"); //true - all, false - future\n    const [city,setCity] = useState(\"all\");\n    const [level,setLevel] = useState(\"all\");\n\n    return (\n        <>\n            <MainHeader setGuide={setGuide} />\n            <MainEventsList guide={guide} events={guide === \"all\" ? events : events.filter(event=> event.guideName === guide)}/>\n        </>\n    );\n}\n\nexport default Main;","import React, {useState} from 'react';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport FileBase64 from \"react-file-base64\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {createEvent} from \"../../../redux/actions\";\nimport {useHistory} from \"react-router\";\n\n\nconst CreateEvent = () => {\n\n    const guides = useSelector(state => state.guides);\n\n    const dispatch = useDispatch();\n\n    const history = useHistory();\n\n    const [newEvent, setNewEvent] = useState({\n        eventDate: \"\",\n        eventDuration: 0,\n        eventName: \"\",\n        eventShortDescription: \"\",\n        eventFullDescription: \"\",\n        eventMeetingPoint: \"\",\n        eventAdditionalInfo: \"\",\n        eventCity: \"\",\n        eventDifficulty: \"\",\n        eventCapacity: 0,\n        eventRegistered: 0,\n        eventPrice: 0,\n        eventPhoto: \"\",\n        guideName: \"\"\n    });\n\n\n    return (\n        <>\n            <div className=\"container-fluid justify-content-center\">\n                <div className=\"row order m-2 p-2 bg-success bg-opacity-75 align-items-center\">\n                    <div className=\"col\">\n                        <h1>Guides site Admin Panel</h1>\n                        <button className=\"btn btn-warning m-1\" onClick={() => {\n                            if (newEvent.eventDate && newEvent.eventDuration && newEvent.eventName && newEvent.eventShortDescription &&\n                                newEvent.eventFullDescription &&\n                                newEvent.eventMeetingPoint &&\n                                newEvent.eventAdditionalInfo &&\n                                newEvent.eventDifficulty &&\n                                newEvent.eventCapacity &&\n                                newEvent.eventPrice &&\n                                newEvent.eventPhoto &&\n                                newEvent.guideName) {\n                                dispatch(createEvent(newEvent))\n                                history.push(\"/admin\");\n                            } else {\n                                console.log(\"не заполнены поля\")\n                            }\n\n                        }}>Опубликовать\n                        </button>\n                        <button className=\"btn btn-warning m-1\" onClick={() => history.push(\"/admin\")}>К списку\n                            экскурсий\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div className=\"container justify-content-center\">\n                <div className=\"row justify-content-center m-1 m-1\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"eventDate\">Выберите дату:</label>\n                    </div>\n                    <div className=\"col-4\">\n                        <DatePicker\n                            className=\"form-control\"\n                            selected={newEvent.eventDate}\n                            onChange={(date) => setNewEvent({...newEvent, eventDate: date})}\n                            showTimeSelect\n                            id=\"eventDate\"\n                        />\n                    </div>\n                </div>\n                <div className=\"row justify-content-center m-1\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"eventName\">Название:</label>\n                    </div>\n                    <div className=\"col-4 \">\n                        <input className=\"w-100 form-control\" type=\"text\" value={newEvent.eventName} id=\"eventName\"\n                               onChange={(e) => setNewEvent({...newEvent, eventName: e.target.value})}/>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center m-1\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"eventShortDescription\">Короткое описание:</label>\n                    </div>\n                    <div className=\"col-4\">\n                        <textarea className=\"w-100 form-control\" rows=\"3\"  value={newEvent.eventShortDescription} id=\"eventShortDescription\"\n                               onChange={(e) => setNewEvent({...newEvent, eventShortDescription: e.target.value})}/>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center m-1\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"eventFullDescription\">Полное описание:</label>\n                    </div>\n                    <div className=\"col-4\">\n                        <textarea className=\"form-control\" rows=\"6\" value={newEvent.eventFullDescription} id=\"eventFullDescription\"\n                               onChange={(e) => setNewEvent({...newEvent, eventFullDescription: e.target.value})}/>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center m-1\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"eventMeetingPoint\">Где встречаемся:</label>\n                    </div>\n                    <div className=\"col-4\">\n                        <input className=\"form-control\" type=\"text\" value={newEvent.eventMeetingPoint} id=\"eventMeetingPoint\"\n                               onChange={(e) => setNewEvent({...newEvent, eventMeetingPoint: e.target.value})}/>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center m-1\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"eventAdditionalInfo\">Дополнительно:</label>\n                    </div>\n                    <div className=\"col-4\">\n                        <input className=\"form-control\" type=\"text\" value={newEvent.eventAdditionalInfo} id=\"eventAdditionalInfo\"\n                               onChange={(e) => setNewEvent({...newEvent, eventAdditionalInfo: e.target.value})}/>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center m-1\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"eventCity\">Город:</label>\n                    </div>\n                    <div className=\"col-4\">\n                        <input className=\"form-control\" type=\"text\" value={newEvent.eventCity} id=\"eventCity\"\n                               onChange={(e) => setNewEvent({...newEvent, eventCity: e.target.value})}/>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center m-1\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"eventDifficulty\">Сложность:</label>\n                    </div>\n                    <div className=\"col-4\">\n                        <select className=\"form-select\" id=\"eventDifficulty\"\n                                onChange={(e) => setNewEvent({...newEvent, eventDifficulty: e.target.value})}>\n                            <option>Турист (обзорная)</option>\n                            <option>Местный (тематическая)</option>\n                            <option>Сам гидом могу</option>\n                        </select>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center m-1\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"eventCapacity\">Кол-во участников:</label>\n                    </div>\n                    <div className=\"col-4\">\n                        <input className=\"form-control\" type=\"number\" id=\"eventCapacity\" min=\"1\" max=\"100\"\n                               onChange={(e) => setNewEvent({...newEvent, eventCapacity: e.target.value})}/>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center m-1\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"eventPrice\">Стоимость:</label>\n                    </div>\n                    <div className=\"col-4\">\n                        <input className=\"form-control\" type=\"number\" id=\"eventPrice\" min=\"1\" max=\"10000\"\n                               onChange={(e) => setNewEvent({...newEvent, eventPrice: e.target.value})}/>\n\n                    </div>\n                </div>\n                <div className=\"row justify-content-center m-1\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"eventDuration\">Продолжительность (часов):</label>\n                    </div>\n                    <div className=\"col-4\">\n                        <input className=\"form-control\" type=\"number\" id=\"eventDuration\" min=\"1\" max=\"99\" step=\"0,5\"\n                               onChange={(e) => setNewEvent({...newEvent, eventDuration: e.target.value})}/>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center m-1\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"guideName\">Гид:</label>\n                    </div>\n                    <div className=\"col-4\">\n                        <select\n                            className=\"form-select\"\n                            onChange={(e) => {\n                                setNewEvent({...newEvent, guideName: e.target.value})\n                            }}>\n                            {guides.map((guide) => {\n                                return <option key={guide._id} value={guide.guideName}>{guide.guideName}</option>\n                            })}\n                        </select>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center m-1\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"eventPhoto\">Загрузка фото:</label>\n                    </div>\n                    <div className=\"col-4\">\n                        <FileBase64\n                            className=\"form-control\"\n                            multiple={false}\n                                    type=\"file\"\n                                    onDone={({base64}) => setNewEvent({...newEvent, eventPhoto: base64})}/>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center m-1\">\n                    <div className=\"col-2\">\n                        <img src={newEvent.eventPhoto} alt=\"Фото экскурсии\"/>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default CreateEvent;","import React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {updateEvent} from \"../../../redux/actions\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport FileBase64 from \"react-file-base64\";\nimport {useHistory} from \"react-router\";\n\n\nconst EditEvent = (props) => {\n\n    const events = useSelector(state => state.events);\n\n    const guides = useSelector(state => state.guides);\n\n    const dispatch = useDispatch();\n\n    const history = useHistory();\n\n    const [editedEvent, setEditedEvent] = useState({\n        eventDate: \"\",\n        eventDuration: 0,\n        eventName: \"\",\n        eventShortDescription: \"\",\n        eventFullDescription: \"\",\n        eventMeetingPoint: \"\",\n        eventAdditionalInfo: \"\",\n        eventCity: \"\",\n        eventDifficulty: \"\",\n        eventCapacity: 0,\n        eventRegistered: 0,\n        eventPrice: 0,\n        eventPhoto: \"\",\n        guideName: \"\"\n    });\n\n\n    useEffect(() => {\n        let editedEvent = events.find(event => event._id === props.match.params.id);\n        let date = new Date(editedEvent.eventDate);\n        setEditedEvent({...editedEvent, eventDate: date});\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n    return (\n        <>\n\n            <div className=\"container-fluid justify-content-center\">\n                <div className=\"row order m-2 p-2 bg-success bg-opacity-75 align-items-center\">\n                    <div className=\"col\">\n                        <h3>Edit Event {editedEvent.eventName}</h3>\n                        <button className=\"btn btn-warning m-1\" onClick={() => {\n                            if (editedEvent.eventDate &&\n                                editedEvent.eventDuration &&\n                                editedEvent.eventName &&\n                                editedEvent.eventShortDescription &&\n                                editedEvent.eventFullDescription &&\n                                editedEvent.eventMeetingPoint &&\n                                editedEvent.eventAdditionalInfo &&\n                                editedEvent.eventDifficulty &&\n                                editedEvent.eventCapacity &&\n                                editedEvent.eventPrice &&\n                                editedEvent.eventPhoto &&\n                                editedEvent.guideName) {\n                                dispatch(updateEvent(props.match.params.id, editedEvent))\n                                history.push(\"/admin\");\n                            } else {\n                                console.log(\"не заполнены поля\")\n                            }\n\n                        }}>Сохранить\n                        </button>\n                        <button className=\"btn btn-warning m-1\" onClick={() => history.push(\"/admin\")}>К списку экскурсий</button>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"container justify-content-center\">\n                <div className=\"row justify-content-center m-1 m-1\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"eventDate\">Выберите дату:</label>\n                    </div>\n                    <div className=\"col-4\">\n                        <DatePicker\n                            className=\"form-control\"\n                            selected={editedEvent.eventDate}\n                            onChange={(date) => setEditedEvent({...editedEvent, eventDate: date})}\n                            showTimeSelect\n                            id=\"eventDate\"\n                        />\n                    </div>\n                </div>\n                <div className=\"row justify-content-center m-1\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"eventName\">Название:</label>\n                    </div>\n                    <div className=\"col-4 \">\n                        <input type=\"text\" value={editedEvent.eventName} id=\"eventName\" className=\"w-100 form-control\"\n                               onChange={(e) => setEditedEvent({...editedEvent, eventName: e.target.value})}/>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center m-1\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"eventShortDescription\">Короткое описание:</label>\n                    </div>\n                    <div className=\"col-4\">\n                        <textarea className=\"w-100 form-control\" rows=\"3\"  value={editedEvent.eventShortDescription} id=\"eventShortDescription\"\n                                  onChange={(e) => setEditedEvent({\n                                      ...editedEvent,\n                                      eventShortDescription: e.target.value\n                                  })}/>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center m-1\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"eventFullDescription\">Полное описание:</label>\n                    </div>\n                    <div className=\"col-4\">\n                        <textarea className=\"form-control\" rows=\"6\" value={editedEvent.eventFullDescription} id=\"eventFullDescription\"\n                                  onChange={(e) => setEditedEvent({...editedEvent, eventFullDescription: e.target.value})}/>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center m-1\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"eventMeetingPoint\">Где встречаемся:</label>\n                    </div>\n                    <div className=\"col-4\">\n                        <input className=\"form-control\" type=\"text\" value={editedEvent.eventMeetingPoint} id=\"eventMeetingPoint\"\n                               onChange={(e) => setEditedEvent({...editedEvent, eventMeetingPoint: e.target.value})}/>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center m-1\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"eventAdditionalInfo\">Дополнительно:</label>\n                    </div>\n                    <div className=\"col-4\">\n                        <input className=\"form-control\" type=\"text\" value={editedEvent.eventAdditionalInfo} id=\"eventAdditionalInfo\"\n                               onChange={(e) => setEditedEvent({...editedEvent, eventAdditionalInfo: e.target.value})}/>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center m-1\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"eventCity\">Город:</label>\n                    </div>\n                    <div className=\"col-4\">\n                        <input className=\"form-control\" type=\"text\" value={editedEvent.eventCity} id=\"eventCity\"\n                               onChange={(e) => setEditedEvent({...editedEvent, eventCity: e.target.value})}/>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center m-1\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"eventDifficulty\">Сложность:</label>\n                    </div>\n                    <div className=\"col-4\">\n                        <select className=\"form-select\" id=\"eventDifficulty\"\n                                onChange={(e) => setEditedEvent({...editedEvent, eventDifficulty: e.target.value})}>\n                            <option>Турист (обзорная)</option>\n                            <option>Местный (тематическая)</option>\n                            <option>Сам гидом могу</option>\n                        </select>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center m-1\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"eventCapacity\">Кол-во участников:</label>\n                    </div>\n                    <div className=\"col-4\">\n                        <input className=\"form-control\" type=\"number\" id=\"eventCapacity\" min=\"1\" max=\"100\" value={editedEvent.eventCapacity}\n                               onChange={(e) => setEditedEvent({...editedEvent, eventCapacity: e.target.value})}/>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center m-1\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"eventPrice\">Стоимость:</label>\n                    </div>\n                    <div className=\"col-4\">\n                        <input className=\"form-control\" type=\"number\" id=\"eventPrice\" min=\"1\" max=\"10000\" value={editedEvent.eventPrice}\n                               onChange={(e) => setEditedEvent({...editedEvent, eventPrice: e.target.value})}/>\n\n                    </div>\n                </div>\n                <div className=\"row justify-content-center m-1\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"eventDuration\">Продолжительность (часов):</label>\n                    </div>\n                    <div className=\"col-4\">\n                        <input type=\"number\" id=\"eventDuration\" min=\"1\" max=\"100\" step=\"0,5\" value={editedEvent.eventDuration} className=\"form-control\"\n                               onChange={(e) => setEditedEvent({...editedEvent, eventDuration: e.target.value})}/>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center m-1\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"guideName\">Гид:</label>\n                    </div>\n                    <div className=\"col-4\">\n                        <select\n                            className=\"form-select\"\n                            onChange={(e) => {\n                                setEditedEvent({...editedEvent, guideName: e.target.value})\n                            }}>\n                            {guides.map((guide) => {\n                                return <option key={guide._id} value={guide.guideName}>{guide.guideName}</option>\n                            })}\n                        </select>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center m-1\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"eventPhoto\">Загрузка фото:</label>\n                    </div>\n                    <div className=\"col-4\">\n                        <FileBase64\n                            className=\"form-control\"\n                            multiple={false}\n                            type=\"file\"\n                            onDone={({base64}) => setEditedEvent({...editedEvent, eventPhoto: base64})}/>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center m-1\">\n                    <div className=\"col-2\">\n                        <img src={editedEvent.eventPhoto} alt=\"Фото экскурсии\"/>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default EditEvent;","import React, {useState} from 'react';\nimport FileBase64 from \"react-file-base64\";\nimport {useDispatch} from \"react-redux\";\nimport {createGuide} from \"../../../redux/actions\";\nimport {useHistory} from \"react-router\";\n\n\nconst GuideCreate = () => {\n\n    const [newGuide, setNewGuide] = useState({guideName: \"\", guideDescription: \"\", guideContact: \"\", guidePhoto: \"\"});\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const createGuideHandler = (newGuide) => {\n        if (newGuide.guideName && newGuide.guideDescription && newGuide.guideContact && newGuide.guidePhoto) {\n            dispatch(createGuide(newGuide));\n            history.push(\"/admin\");\n        }\n    }\n\n    return (\n        <>\n            <div className=\"container-fluid justify-content-center\">\n                <div className=\"row order m-2 p-2 bg-success bg-opacity-75 align-items-center\">\n                    <div className=\"col\">\n                        <h1>Регистрация нового <span className=\"text-warning\">гида</span></h1>\n                        <button className=\"btn btn-warning m-1\" onClick={() => createGuideHandler(newGuide)}>Сохранить</button>\n                        <button className=\"btn btn-warning m-1\" onClick={() => history.push(\"/admin\")}>Отмена</button>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"container justify-content-center\">\n                <div className=\"row justify-content-center m-1 m-1\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"guideName\">Имя:</label>\n                    </div>\n                    <div className=\"col-4\">\n                        <input className=\"form-control w-100\" type=\"text\" value={newGuide.guideName} id=\"guideName\"\n                               onChange={(e) => setNewGuide({...newGuide, guideName: e.target.value})}/>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center m-1 m-1\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"guideDescription\">Кто такой этот гид:</label>\n                    </div>\n                    <div className=\"col-4\">\n                        <textarea className=\"form-control w-100\" rows=\"3\" value={newGuide.guideDescription} id=\"guideDescription\"\n                               onChange={(e) => setNewGuide({...newGuide, guideDescription: e.target.value})}/>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center m-1 m-1\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"guideContact\">Контактный номер телефона:</label>\n                    </div>\n                    <div className=\"col-4\">\n                        <input className=\"form-control w-100\" type=\"text\" value={newGuide.guideContact} id=\"guideContact\"\n                               onChange={(e) => setNewGuide({...newGuide, guideContact: e.target.value})}/>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center m-1 m-1\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"guidePhoto\">Загрузка фото:</label>\n                    </div>\n                    <div className=\"col-4\">\n                        <FileBase64 multiple={false}\n                                    type=\"file\"\n                                    onDone={({base64}) => setNewGuide({...newGuide, guidePhoto: base64})}/>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center m-1 m-1\">\n                    <div className=\"col-auto\">\n                        {newGuide.guidePhoto ?  <img src={newGuide.guidePhoto} alt=\"Фото гида\"/> : <h1><i className=\"bi bi-person-square\"></i></h1> }\n                    </div>\n\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default GuideCreate;","import React, {useEffect, useState} from 'react';\nimport FileBase64 from \"react-file-base64\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {updateGuide} from \"../../../redux/actions\";\nimport {useHistory} from \"react-router\";\n\n\nconst GuideEdit = (props) => {\n\n    const [newGuide, setNewGuide] = useState({guideName: \"loading...\", guideDescription: \"...\", guideContact: \"...\", guidePhoto: \"\"});\n    const guides = useSelector(state => state.guides);\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    useEffect(() => {\n        let editedGuide = guides.find(guide => guide._id === props.match.params.id);\n        setNewGuide(editedGuide);\n    },[]); // eslint-disable-line react-hooks/exhaustive-deps\n\n    const updateGuideHandler = (newGuide) => {\n        if (newGuide.guideName && newGuide.guideDescription && newGuide.guideContact && newGuide.guidePhoto) {\n            dispatch(updateGuide(props.match.params.id, newGuide));\n            history.push(\"/admin\");\n        }\n    }\n\n    return (\n        <>\n            <div className=\"container-fluid justify-content-center\">\n                <div className=\"row order m-2 p-2 bg-success bg-opacity-75 align-items-center\">\n                    <div className=\"col\">\n                        <h1>Изменение информации <span className=\"text-warning\">гида</span></h1>\n                        <button className=\"btn btn-warning m-1\" onClick={() => updateGuideHandler(newGuide)}>Сохранить</button>\n                        <button className=\"btn btn-warning m-1\" onClick={() => history.push(\"/admin\")}>Отмена</button>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"container justify-content-center\">\n                <div className=\"row justify-content-center m-1 m-1\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"guideName\">Имя:</label>\n                    </div>\n                    <div className=\"col-4\">\n                        <input className=\"form-control w-100\" type=\"text\" value={newGuide.guideName} id=\"guideName\"\n                               onChange={(e) => setNewGuide({...newGuide, guideName: e.target.value})}/>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center m-1 m-1\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"guideDescription\">Кто такой этот гид:</label>\n                    </div>\n                    <div className=\"col-4\">\n                        <textarea className=\"form-control w-100\" rows=\"3\" value={newGuide.guideDescription} id=\"guideDescription\"\n                                  onChange={(e) => setNewGuide({...newGuide, guideDescription: e.target.value})}/>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center m-1 m-1\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"guideContact\">Контактный номер телефона:</label>\n                    </div>\n                    <div className=\"col-4\">\n                        <input className=\"form-control w-100\" type=\"text\" value={newGuide.guideContact} id=\"guideContact\"\n                               onChange={(e) => setNewGuide({...newGuide, guideContact: e.target.value})}/>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center m-1 m-1\">\n                    <div className=\"col-2\">\n                        <label htmlFor=\"guidePhoto\">Загрузка фото:</label>\n                    </div>\n                    <div className=\"col-4\">\n                        <FileBase64 multiple={false}\n                                    type=\"file\"\n                                    onDone={({base64}) => setNewGuide({...newGuide, guidePhoto: base64})}/>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center m-1 m-1\">\n                    <div className=\"col-auto\">\n                        {newGuide.guidePhoto ?  <img src={newGuide.guidePhoto} alt=\"Фото гида\"/> : <h1><i className=\"bi bi-person-square\"></i></h1> }\n                    </div>\n\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default GuideEdit;","import React from 'react';\nimport {useDispatch} from \"react-redux\";\nimport {addOrder, updateEventRegistered} from \"../../../redux/actions\";\n\nconst Payment = (props) => {\n    const dispatch = useDispatch();\n    return (\n        <div className=\"container\">\n            <div className=\"row border m-2 p-2 bg-success text-dark bg-opacity-75 align-items-center\">\n                <div className=\"col\">\n                    <h2>Оплата</h2>\n                </div>\n            </div>\n            <div className=\"row m-2 p-2 text-dark align-items-center\">\n                <div className=\"col text-center\">\n                    <p>Вы покупаете <strong>{props.order.orderQuantity}</strong> билет(ов)</p>\n                    <p>На Экскурсию <strong>{props.eventName}</strong></p>\n                    <p>Ваш заказ составил <strong>${props.order.orderTotal}</strong>.</p>\n                    <button className=\"btn btn-success m-1\" onClick={() => {\n                        dispatch(addOrder(props.order));\n                        let eventRegistered = Number(props.order.orderQuantity) + Number(props.eventRegistered);\n                        dispatch(updateEventRegistered(props.order.orderEventId, {eventRegistered}));\n                        props.setPaymentStatus(true);\n                        props.setView(\"ThankYou\");\n                    }}>Оплатить\n                    </button>\n                    <button className=\"btn btn-secondary m-1\" onClick={() => props.setView(\"Order\")}>Отмена</button>\n                </div>\n            </div>\n\n        </div>\n    );\n};\n\nexport default Payment;","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport {useDispatch} from \"react-redux\";\nimport {getEvents} from \"../../../redux/actions\";\n\nconst Event = ({setView, event}) => {\n\n    const dispatch = useDispatch();\n\n    const durationStringHandler = (date) => {\n        let newTime = new Date(date).toLocaleTimeString(undefined, {\n            hour: '2-digit',\n            minute: '2-digit',\n            second: '2-digit',\n        });\n        let newTimeArr = newTime.split(\":\");\n        return `${newTimeArr[0]}.${newTimeArr[1]} - ${Number(newTimeArr[0]) + Number(event.eventDuration)}.${newTimeArr[1]} (${event.eventDuration} часа)`\n    }\n\n    if (event) {\n        return (\n            <>\n                <div className=\"container-fluid justify-content-center\">\n                    <div className=\"row order m-2 p-2 bg-success bg-opacity-75 align-items-center\">\n                        <div className=\"col\">\n                            <h1>Сайт <span className=\"text-warning\">Гидов</span></h1>\n                            <button className=\"btn btn-warning m-1\" onClick={() => setView(\"Order\")}>Записаться</button>\n                            <Link to=\"/\">\n                                <button className=\"btn btn-warning m-1\">На главную</button>\n                            </Link>\n                        </div>\n                        <div className=\"col text-center\">\n                            <h2>{event.eventName}</h2>\n                            <h4><span className=\"text-warning\">Гид</span> события: {event.guideName}</h4>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"container-fluid\">\n                    <div className=\"row m-2 p-2\">\n                        <div className=\"col-4\">\n                            <img src={event.eventPhoto} alt=\"Event\" width=\"300\" height=\"300\"\n                                 className=\"rounded mx-auto\"/>\n                        </div>\n                        <div className=\"col-8\">\n                            <p>{event.eventShortDescription}</p>\n                            <div className=\"col p-0\">\n                                <p><i className=\"bi bi-geo-alt-fill\"></i> {event.eventCity}</p>\n                                <p><i className=\"bi bi-clock-fill\"></i> {durationStringHandler(event.eventDate)}</p>\n                                <p><i className=\"bi bi-currency-exchange\"></i> {event.eventPrice}</p>\n                                <p><i className=\"bi bi-people-fill\"></i> Осталось {event.eventCapacity - event.eventRegistered} мест(а)\n                                </p>\n                            </div>\n                            <p>{event.eventFullDescription}</p>\n                            <hr/>\n                            <h4>Где встречаемся?</h4>\n                            <p>{event.eventMeetingPoint}</p>\n                            <p><i className=\"bi bi-info-circle-fill\"></i> {event.eventAdditionalInfo}</p>\n                            <p><i className=\"bi bi-emoji-sunglasses-fill\"></i> Уровень сложности\n                                материала: {event.eventDifficulty}</p>\n                        </div>\n                    </div>\n                </div>\n            </>\n\n        );\n    } else {\n        dispatch(getEvents());\n        return (\n            <div className=\"container-fluid justify-content-center\">\n                <div className=\"row order m-2 p-2 bg-success bg-opacity-75 align-items-center\">\n                    <h1>Loading</h1>\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"spinner-border\" role=\"status\">\n                            <span className=\"visually-hidden\">Loading...</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default Event;","import React, {useState} from 'react';\nimport {Link} from \"react-router-dom\";\nimport MainEventsLI from \"../Main/MainEventsLI\";\n\nconst Order = (props) => {\n\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [newOrder, setNewOrder] = useState({\n        clientName: \"\",\n        clientPhone: \"\",\n        clientEmail: \"\",\n        orderQuantity: 1,\n        orderTotal: 0,\n        eventId: props.id\n    });\n\n    let ticketsAvailable = props.event.eventCapacity - props.event.eventRegistered;\n\n    // const dateFormatHandler = (date) => {\n    //     let newDateString = new Date(date).toLocaleDateString();\n    //     let newDateStringArr = newDateString.split(\".\");\n    //     let month;\n    //     switch (newDateStringArr[1]) {\n    //         case \"02\":\n    //             month = \"Февраля\";\n    //             break;\n    //         case \"03\":\n    //             month = \"Марта\";\n    //             break;\n    //         case \"04\":\n    //             month = \"Апреля\";\n    //             break;\n    //         case \"05\":\n    //             month = \"Май\";\n    //             break;\n    //         case \"06\":\n    //             month = \"Июня\";\n    //             break;\n    //         case \"07\":\n    //             month = \"Июля\";\n    //             break;\n    //         case \"08\":\n    //             month = \"Августа\";\n    //             break;\n    //         case \"09\":\n    //             month = \"Сентября\";\n    //             break;\n    //         case \"10\":\n    //             month = \"Октября\";\n    //             break;\n    //         case \"11\":\n    //             month = \"Ноября\";\n    //             break;\n    //         case \"12\":\n    //             month = \"Декабря\";\n    //             break;\n    //         default: {\n    //             month = \"Января\"\n    //         }\n    //\n    //     }\n    //     return `${newDateStringArr[0]} ${month}`\n    // }\n    //\n    // const durationStringHandler = (date) => {\n    //     let newTime = new Date(date).toLocaleTimeString(undefined, {\n    //         hour: '2-digit',\n    //         minute: '2-digit',\n    //         second: '2-digit',\n    //     });\n    //     let newTimeArr = newTime.split(\":\");\n    //     return `${newTimeArr[0]}.${newTimeArr[1]} - ${Number(newTimeArr[0]) + Number(props.event.eventDuration)}.${newTimeArr[1]} (${props.event.eventDuration} часа)`\n    // }\n\n    return (\n        <div>\n            <div className=\"container \">\n                <div className=\"row border m-2 p-2 bg-success text-dark bg-opacity-75 align-items-center\">\n                    <div className=\"col-8\">\n                        <h2>Записаться и оплатить</h2>\n                    </div>\n                    <div className=\"col-4\">\n                        <Link to=\"/\">\n                            <button className=\"btn btn-warning m-1\">На Главную</button>\n                        </Link>\n                        <button className=\"btn btn-warning m-1\" onClick={() => props.setView(\"Event\")}>\n                            Отмена\n                        </button>\n                    </div>\n\n                </div>\n                <MainEventsLI event={props.event}/>\n                <div className=\"row m-2 p-2 justify-content-center\">\n                    {errorMessage ? <div className=\"col-3 alert alert-danger\">{errorMessage}</div> : \"\"}\n                </div>\n                <div className=\"row m-2 p-2\">\n                    <div className=\"col-2\"></div>\n                    <div className=\"col\">\n                        <div className=\"input-group mb-3\">\n                            <span className=\"input-group-text\" id=\"yourName\">\n                                <i className=\"bi bi-person-square\"></i>\n                            </span>\n                            <input\n                                aria-describedby=\"yourName\"\n                                className=\"form-control\"\n                                placeholder=\"Ваше Имя\"\n                                required type=\"text\"\n                                onChange={(e) =>\n                                    setNewOrder({...newOrder, clientName: e.target.value})}/>\n                        </div>\n                        <div className=\"input-group mb-3\">\n                            <span className=\"input-group-text\" id=\"yourPhone\">\n                                <i className=\"bi bi-telephone-fill\"></i>\n                            </span>\n                            <input\n                                aria-describedby=\"yourPhoneName\"\n                                className=\"form-control\"\n                                placeholder=\"Ваш номер телефона\"\n                                required type=\"text\"\n                                onChange={(e) =>\n                                    setNewOrder({...newOrder, clientPhone: e.target.value})}/>\n                        </div>\n                        <div className=\"input-group mb-3\">\n                            <span className=\"input-group-text\" id=\"yourEmail\">\n                                <i className=\"bi bi-envelope-fill\"></i>\n                            </span>\n                            <input\n                                aria-describedby=\"yourEmail\"\n                                className=\"form-control\"\n                                placeholder=\"Ваш e-mail\"\n                                required type=\"text\"\n                                onChange={(e) =>\n                                    setNewOrder({...newOrder, clientEmail: e.target.value})}/>\n                        </div>\n\n\n                    </div>\n                    <div className=\"col-2\">\n                        <p>Осталось мест: {ticketsAvailable}</p>\n                        <label> Кол-во: </label>\n                        <input className=\"form-control d-grid\" value={newOrder.orderQuantity} type=\"number\" min=\"1\"\n                               max={ticketsAvailable}\n                               onChange={(e) => {\n                                   setNewOrder({...newOrder, orderQuantity: e.target.value});\n                               }}/>\n                        <br/>\n                        <p>Итого: ${newOrder.orderQuantity * props.event.eventPrice}</p>\n                    </div>\n                    <div className=\"col-2\">\n\n                    </div>\n\n\n                </div>\n                <div className=\"row m-2 p-2 justify-content-center\">\n                    <div className=\"col-2\">\n                        <button className=\"btn btn-success\" onClick={() => {\n                            if (newOrder.clientName && newOrder.clientPhone && newOrder.clientEmail) {\n                                props.setOrder({\n                                    orderClientName: newOrder.clientName,\n                                    orderClientPhone: newOrder.clientPhone,\n                                    orderClientEmail: newOrder.clientEmail,\n                                    orderQuantity: newOrder.orderQuantity,\n                                    orderTotal: newOrder.orderQuantity * props.event.eventPrice,\n                                    orderEventId: props.id\n                                });\n                                props.setView(\"Payment\");\n                            } else {\n                                setErrorMessage(\"Заполните все поля.\");\n                            }\n\n                        }}>К оплате\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Order;","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nconst ThankYou = (props) => {\n\n    let ddMMyyyy = new Date(props.event.eventDate).toLocaleDateString();\n    const url = \"https://api.qrserver.com/v1/create-qr-code/?data=\"\n    const qrInfo = url+\"event_id:\"+props.event._id+\"_order_id:\"+props.order._id;\n\n    return (\n        <div className=\"container\">\n            <div className=\"row border m-2 p-2 bg-success text-dark bg-opacity-75 align-items-center\">\n                <div className=\"col\">\n                    <h2>Ваш заказ оформлен и оплачен!</h2>\n                    <Link to=\"/\"><button className=\"btn btn-warning m-1\">На главную</button></Link>\n                    <button className=\"btn btn-warning m-1\">Сохранить</button>\n                </div>\n            </div>\n            <div className=\"row m-2 p-2 align-items-center\">\n                <div className=\"col text-center\">\n                    <h3>{props.event.eventName}</h3>\n                    <h4>Дата: {ddMMyyyy}</h4>\n                    <h4>Кол-во оплаченых мест: {props.order.orderQuantity}</h4>\n                    <img src={qrInfo} alt=\"Ваш QR код\"/>\n\n                </div>\n            </div>\n\n        </div>\n    );\n};\n\nexport default ThankYou;","import React, {useState} from 'react';\nimport {useSelector} from \"react-redux\";\nimport Payment from \"./Payment\";\nimport Event from \"./Event\";\nimport Order from \"./Order\";\nimport ThankYou from \"./ThankYou\";\n\nconst ClientHook = (props) => {\n    const [view, setView] = useState(\"Event\");//Event,Order,Payment,ThankYou\n    const [order, setOrder] = useState({\n        orderClientName: \"\",\n        orderClientPhone: \"\",\n        orderClientEmail: \"\",\n        orderQuantity: 0,\n        orderTotal: 0,\n        orderEventId: props.match.params.id\n    });\n    const [paymentStatus, setPaymentStatus] = useState(false);\n    const event = useSelector(state => state.events.find(event => event._id === props.match.params.id));\n\n    switch (view) {\n        case \"ThankYou\":\n            return (<ThankYou paymentStatus={paymentStatus} order={order} event={event}/>)\n        case \"Payment\":\n            return (<Payment eventName={event.eventName} eventRegistered={event.eventRegistered} order={order} setView={setView} setPaymentStatus={setPaymentStatus}/>);\n        case \"Event\":\n            return (<Event event={event} setView={setView}/>);\n        case \"Order\":\n            return (<Order id={props.match.params.id} event={event} setOrder={setOrder} setView={setView}/>);\n        default:\n            return (<Event event={event} setView={setView}/>);\n    }\n\n};\n\nexport default ClientHook;","import React, {useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {dellEvent} from \"../../../redux/actions\";\nimport {Link} from \"react-router-dom\";\n\nfunction EventSmall(props) {\n\n    const date = new Date(props.event.eventDate);\n\n    const deleteEventHandler = () => {\n        if (window.confirm(\"Точно удаляем?\")) {\n            let id = props.event._id;\n            props.deleteEventHandler(id);\n        }\n    }\n\n\n    return (\n        <tr>\n            <th>{props.event ? date.toLocaleDateString() : \"xxx\"}</th>\n            <th>{props.event ? props.event.eventName : \"xxx\"}</th>\n            <th>{props.event ? props.event.eventPrice : \"xxx\"}</th>\n            <th>{props.event ? `${props.event.eventRegistered ? props.event.eventRegistered : 0}/${props.event.eventCapacity}` : \"xxx\"}</th>\n            <th>{props.event ? props.event._id : \"xxx\"}</th>\n\n            <th>\n                <Link to={\"/event/\" + props.event._id}>\n                    <button className=\"btn btn-secondary btn-sm m-1\"><i className=\"bi bi-eye\"></i></button>\n                </Link>\n                <Link to={\"/edit_event/\" + props.event._id}>\n                    <button className=\"btn btn-secondary btn-sm m-1\">edit</button>\n                </Link>\n                <button className=\"btn btn-secondary btn-sm m-1\" onClick={deleteEventHandler}>X</button>\n            </th>\n        </tr>\n    )\n}\n\n\nconst EventsList = () => {\n    const events = useSelector(state => state.events);\n    const guides = useSelector(state => state.guides);\n    const dispatch = useDispatch();\n    const [guideForFilter,setGuideForFilter] = useState(\"all\");\n\n    const deleteEventHandler = (id) => {\n        dispatch(dellEvent(id))\n    }\n    const allEventsMapToTable = (events) => {\n        return (\n            events.length > 0 ?\n                events.map(event => <EventSmall deleteEventHandler={deleteEventHandler} event={event}\n                                                key={event._id}/>).reverse()\n                :\n                <tr>\n                    <th>LOADING...</th>\n                    <th>...</th>\n                    <th>...</th>\n                    <th>...</th>\n                    <th>...</th>\n                    <th>...</th>\n\n                </tr>\n\n        )\n    }\n\n    const filterEventsMapToTable = (guideName) =>{\n        switch (guideName) {\n            case \"all\":\n                return events;\n            default:\n                return events.filter(event => event.guideName === guideName);\n        }\n    }\n\n    return (\n        <div className=\"container-fluid justify-content-center\">\n            <div className=\"row p-2 m-2 bg-success bg-opacity-50\">\n                <div className=\"col-7\">\n                    <h3>Все Экскурсии</h3>\n                </div>\n                <div className=\"col-1\">\n\n                </div>\n                <div className=\"col-4\">\n                    <select  className=\"form-select m-1\" onChange={(e) => setGuideForFilter(e.target.value)}>\n                        <option value=\"all\">Все</option>\n                        {guides.map((guide) => {\n                            return <option key={guide._id} value={guide.guideName}>{guide.guideName}</option>\n                        })}\n                    </select>\n                </div>\n\n            </div>\n            <div className=\"row p-2 m-2\">\n                <table className=\"table table-striped table-hover table-sm\">\n                    <thead>\n                    <tr>\n                        <th>Дата</th>\n                        <th>Название</th>\n                        <th>Цена</th>\n                        <th>Места</th>\n                        <th>ID</th>\n                        <th>Действия</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {allEventsMapToTable(filterEventsMapToTable(guideForFilter))}\n                    </tbody>\n                </table>\n            </div>\n\n        </div>\n    );\n};\n\nexport default EventsList;","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {deleteGuide} from \"../../../redux/actions\";\n\nconst GuideItem = (props) => {\n\n    const deleteGuideHandler = () => {\n        if (window.confirm(\"Точно удаляем?\")) {\n            let id = props.guide._id;\n            props.deleteGuideHandler(id);\n        }\n    }\n\n    return (\n        <tr>\n            <th>{props.guide.guideName}</th>\n            <th>{props.guideEventsCount(props.guide.guideName)}</th>\n            <th>{props.guide.guideContact}</th>\n            <th>\n                <Link to={\"/guides/\" + props.guide._id}>\n                    <button className=\"btn btn-secondary btn-sm m-1\"><i className=\"bi bi-eye\"></i></button>\n                </Link>\n                <Link to={\"/edit_guide/\" + props.guide._id}>\n                    <button className=\"btn btn-secondary btn-sm m-1\">edit</button>\n                </Link>\n                <button className=\"btn btn-secondary btn-sm m-1\" onClick={deleteGuideHandler}>X</button>\n            </th>\n        </tr>\n    );\n}\n\nconst GuidesList = () => {\n\n    const dispatch = useDispatch();\n    const guides = useSelector(state => state.guides);\n    const events = useSelector(state => state.events);\n\n    const deleteGuideHandler = (id) => {\n        dispatch(deleteGuide(id));\n    }\n\n    const guideEventsCount = (guideName) => {\n        let tempEvents = events.filter(event => event.guideName === guideName);\n        return tempEvents.length;\n    }\n\n    return (\n        <div className=\"container-fluid justify-content-center\">\n            <div className=\"row p-2 m-2 bg-success bg-opacity-50\">\n                <h3>Список гидов-экскурсоводов</h3>\n            </div>\n            <div className=\"row p-2 m-2\">\n                <table className=\"table table-striped table-hover table-sm\">\n                    <thead>\n                    <tr>\n                        <th>Имя</th>\n                        <th>Кол-во экскурсий</th>\n                        <th>Телефон</th>\n                        <th>Действия</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {guides.length > 0 ?\n                        guides.map(guide => <GuideItem guideEventsCount={guideEventsCount} deleteGuideHandler={deleteGuideHandler} guide={guide}\n                                                       key={guide._id}/>).reverse()\n                        :\n                        <tr>\n                            <th>LOADING...</th>\n                            <th>...</th>\n                            <th>...</th>\n                            <th>...</th>\n                        </tr>\n                    }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n\n    );\n};\n\nexport default GuidesList;","import React, {useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Link} from \"react-router-dom\";\nimport {dellOrder} from \"../../../redux/actions\";\n\nfunction OrderSmall(props) {\n\n    const date = new Date(props.order.createdAt);\n\n    const dispatch = useDispatch();\n\n    const deleteOrderHandler = () => {\n        dispatch(dellOrder(props.order._id, props.order.orderEventId, props.order.orderQuantity));\n    }\n\n    return (\n        <tr>\n            <th>{props.order ? date.toLocaleDateString() : \"xxx\"}</th>\n            <th>{props.order ? props.order.orderClientName : \"xxx\"}</th>\n            <th>{props.order ? props.order.orderClientPhone : \"xxx\"}</th>\n            <th>{props.order ? props.order.orderClientEmail : \"xxx\"}</th>\n            <th>{props.order ? props.order.orderEventId : \"xxx\"}</th>\n            <th>{props.order ? props.order.orderQuantity : \"xxx\"}</th>\n            <th>{props.order ? `${props.order.orderTotal}` : \"xxx\"}</th>\n            <th>\n                <button className=\"btn btn-secondary btn-sm m-1\" onClick={deleteOrderHandler}>X</button>\n                <Link to={\"/orders/\" + props.order._id}>\n                    <button className=\"btn btn-secondary btn-sm m-1\"><i className=\"bi bi-eye\"></i></button>\n                </Link>\n            </th>\n        </tr>\n    )\n}\n\n\nconst OrdersList = () => {\n    const orders = useSelector(state => state.orders);\n    const events = useSelector(state => state.events);\n\n    const [eventIDForFilter, setEventIDForFilter] = useState(\"all\");\n\n    const allOrdersToMapToTable = (orders) => {\n        return (\n            orders.length > 0 ?\n                orders.map(order => <OrderSmall order={order} key={order._id}/>).reverse()\n                :\n                <tr>\n                    <th>LOADING...</th>\n                    <th>...</th>\n                    <th>...</th>\n                    <th>...</th>\n                    <th>...</th>\n                    <th>...</th>\n                    <th>...</th>\n                    <th>...</th>\n                </tr>\n        )\n    }\n\n    const ordersToShowByID = (id) => {\n        switch (id) {\n            case \"all\":\n                return orders;\n            default:\n                return orders.filter(order => order.orderEventId === id);\n        }\n    }\n\n    return (\n        <div className=\"container-fluid justify-content-center\">\n            <div className=\"row p-2 m-2 bg-success bg-opacity-50\">\n                <div className=\"col\">\n                    <h3>Все Заказы</h3>\n                </div>\n                <div className=\"col\">\n                    <select className=\"form-select m-1\" onChange={(e) => {\n                        setEventIDForFilter(e.target.value);\n                    }}>\n                        <option value=\"all\">Все</option>\n                        {events.map((event) => {\n                            return <option key={event._id} value={event._id}>{event.eventName}</option>\n                        })}\n                    </select>\n                </div>\n            </div>\n            <div className=\"row p-2 m-2\">\n                <table className=\"table table-striped table-hover table-sm\">\n                    <thead>\n                    <tr>\n                        <th>Дата</th>\n                        <th>Имя клиента</th>\n                        <th>Телефон</th>\n                        <th>E-mail</th>\n                        <th>ID события</th>\n                        <th>Кол-во</th>\n                        <th>Сумма</th>\n                        <th>Действие</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {allOrdersToMapToTable(ordersToShowByID(eventIDForFilter))}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n\n    );\n};\n\nexport default OrdersList;","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nconst AdminPanelHeader = () => {\n    return (\n        <div className=\"container-fluid justify-content-center\">\n            <div className=\"row m-2 p-2 bg-success bg-opacity-75 align-items-center\">\n                <div className=\"col\">\n                    <h1>Админ панель <span className=\"text-warning\">Сайта Гидов</span></h1>\n                    <Link to=\"/\">\n                        <button type=\"button\" className=\"btn btn-warning m-1\"> На главную</button>\n                    </Link>\n                    <Link to=\"/create_event\">\n                        <button className=\"btn btn-warning m-1\">Создать Экскурсию</button>\n                    </Link>\n                    <Link to=\"/create_guide\">\n                        <button className=\"btn btn-warning m-1\">Зарегистрировать гида</button>\n                    </Link>\n                    <Link to=\"/create_order/\">\n                        <button className=\"btn btn-warning m-1\">Создать заказ</button>\n                    </Link>\n\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default AdminPanelHeader;","import React from 'react';\nimport EventsList from \"./events/EventsList\";\nimport GuidesList from \"./guides/GuidesList\";\nimport OrdersList from \"./orders/OrdersList\";\nimport AdminPanelHeader from \"./AdminPanelHeader\";\n\n\nconst AdminPanel = () => {\n    return (\n        <>\n            <AdminPanelHeader/>\n                <EventsList/>\n                <GuidesList/>\n                <OrdersList/>\n\n        </>\n    );\n};\n\nexport default AdminPanel;","import React from 'react';\nimport {useHistory} from \"react-router-dom\";\nimport {useSelector} from \"react-redux\";\n\nconst OrderPage = (props) => {\n\n    const history = useHistory();\n    const order = useSelector(state => state.orders.find(order => order._id === props.match.params.id));\n\n    const url = \"https://api.qrserver.com/v1/create-qr-code/?data=\"\n\n    return (\n        <>\n            <div className=\"container-fluid justify-content-center\">\n                <div className=\"row order m-2 p-2 bg-success bg-opacity-75 align-items-center\">\n                    <div className=\"col\">\n                        <h1>Информациия о <span className=\"text-warning\">заказе</span></h1>\n                        <button className=\"btn btn-warning m-1\">Сохранить</button>\n                        <button className=\"btn btn-warning m-1\" onClick={() => history.push(\"/admin\")}>Отмена</button>\n                    </div>\n                </div>\n            </div>\n            <div className=\"container justify-content-center\">\n                <div className=\"row m-2 p-2 align-items-center\">\n                    <div className=\"col text-center\">\n                        <h4>Имя клиента: {order ? order.orderClientName : \"...loading\"}</h4>\n                        <h5>Кол-во оплаченых мест: {order ? order.orderQuantity : \"...loading\"}</h5>\n                        <h5>Телефон клиента: {order ? order.orderClientPhone : \"...loading\"}</h5>\n                        <h5>E-mail клиента: {order ? order.orderClientEmail : \"...loading\"}</h5>\n                        <h5>Всего оплачено: ${order ? order.orderTotal : \"...loading\"}</h5>\n                        <img src={order ? url+\"event_id:\"+order.orderEventId+\"_clientName:\"+order.orderClientName : \"\"} alt=\"Ваш QR код\"/>\n\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default OrderPage;","import React, {useState} from 'react';\nimport MainEventsLI from \"../../../user/Main/MainEventsLI\";\nimport {useSelector} from \"react-redux\";\n\nconst OrderCreateForm = (props) => {\n\n    const events = useSelector(state => state.events);\n    const [event, setEvent] = useState({});\n    const [newOrder, setNewOrder] = useState({orderQuantity:0});\n\n    let ticketsAvailable = event._id ? event.eventCapacity - event.eventRegistered : null;\n\n    const saveOrder = () => {\n        if (newOrder.orderClientName && newOrder.orderClientPhone\n            && newOrder.orderClientEmail && newOrder.orderQuantity) {\n            props.setOrder({\n                orderClientName: newOrder.orderClientName,\n                orderClientPhone: newOrder.orderClientPhone,\n                orderClientEmail: newOrder.orderClientEmail,\n                orderQuantity: newOrder.orderQuantity,\n                orderTotal: newOrder.orderQuantity * event.eventPrice,\n                orderEventId: event._id\n            });\n            props.setView(false);\n        } else {\n            props.setErrorMes(\"Заполните все поля, блеать!\");\n        }\n    }\n\n    return (\n        <div className=\"container justify-content-center\">\n            <div className=\"row m-2 p-2\">\n                <div className=\"col\">\n                    <div className=\"input-group mb-3\">\n                        <select className=\"form-select m-1\" onChange={(e) => {\n                            setNewOrder({...newOrder, eventId: e.target.value});\n                            let event = events.find(event => event._id === e.target.value);\n                            setEvent(event);\n                            console.log(event.eventCapacity - event.eventRegistered);\n                        }}>\n                            <option hidden >Выберите событие, блеать!</option>\n                            {events.map((event) => {\n                                return <option key={event._id} value={event._id}>{event.eventName}</option>\n                            })}\n                        </select>\n                    </div>\n                    <div className=\"input-group mb-3\">\n                            <span className=\"input-group-text\" id=\"yourName\">\n                                <i className=\"bi bi-person-square\"></i>\n                            </span>\n                        <input\n                            aria-describedby=\"yourName\"\n                            className=\"form-control\"\n                            placeholder=\"Ваше Имя\"\n                            required type=\"text\"\n                            onChange={(e) =>\n                                setNewOrder({...newOrder, orderClientName: e.target.value})}/>\n                    </div>\n                    <div className=\"input-group mb-3\">\n                            <span className=\"input-group-text\" id=\"yourPhone\">\n                                <i className=\"bi bi-telephone-fill\"></i>\n                            </span>\n                        <input\n                            aria-describedby=\"yourPhoneName\"\n                            className=\"form-control\"\n                            placeholder=\"Ваш номер телефона\"\n                            required type=\"text\"\n                            onChange={(e) =>\n                                setNewOrder({...newOrder, orderClientPhone: e.target.value})}/>\n                    </div>\n                    <div className=\"input-group mb-3\">\n                            <span className=\"input-group-text\" id=\"yourEmail\">\n                                <i className=\"bi bi-envelope-fill\"></i>\n                            </span>\n                        <input\n                            aria-describedby=\"yourEmail\"\n                            className=\"form-control\"\n                            placeholder=\"Ваш e-mail\"\n                            required type=\"text\"\n                            onChange={(e) =>\n                                setNewOrder({...newOrder, orderClientEmail: e.target.value})}/>\n                    </div>\n                </div>\n                <div className=\"col-2\">\n                    <p>Осталось мест: {ticketsAvailable}</p>\n                    <label> Кол-во: </label>\n                    <input className=\"form-control d-grid\" value={newOrder.orderQuantity} type=\"number\" min=\"1\"\n                           max={ticketsAvailable}\n                           onChange={(e) => {\n                               setNewOrder({...newOrder, orderQuantity: e.target.value});\n                           }}/>\n                    <br/>\n                    {newOrder.orderQuantity ? <p>Итого: ${newOrder.orderQuantity * event.eventPrice}</p> : <></>}\n                </div>\n                <div className=\"col-4\">\n                    <p>Вы покупаете <strong>{newOrder.orderQuantity}</strong> билет(ов)</p>\n                    <p>Ваш заказ\n                        составил <strong>${newOrder.orderQuantity ? newOrder.orderQuantity * event.eventPrice : 0}</strong>.\n                    </p>\n                    {event._id && (Number(event.eventCapacity) - Number(event.eventRegistered)) > 0 ? <button className=\"btn btn-success\" onClick={saveOrder}>К оплате</button> : <></>}\n                    {event._id && (Number(event.eventCapacity) - Number(event.eventRegistered)) <= 0 ? <p><span\n                        className=\"badge bg-success text-warning\">Все места заняты</span></p> : <></>}\n                </div>\n            </div>\n\n            <div className=\"row justify-content-center m-1 p-1\">\n                <div>\n                    {event._id  ? <MainEventsLI event={event}/> : <></>}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default OrderCreateForm;","import React from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport MainEventsLI from \"../../../user/Main/MainEventsLI\";\nimport {addOrder, updateEventRegistered} from \"../../../../redux/actions\";\nimport {useHistory} from \"react-router\";\n\nconst OrderCreateConfirm = (props) => {\n    const events = useSelector(state => state.events);\n    const event = events.find(event => event._id = props.order.orderEventId);\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const url = \"https://api.qrserver.com/v1/create-qr-code/?data=\"\n    const qrInfo = url + \"event_id:\" + event._id + \"_clientName:\" + props.order.orderClientName;\n\n    const saveOrder = () => {\n        dispatch(addOrder(props.order));\n        let eventRegistered = Number(props.order.orderQuantity) + Number(event.eventRegistered);\n        dispatch(updateEventRegistered(props.order.orderEventId, {eventRegistered}));\n        history.push(\"/admin\");\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"row m-2 p-2 justify-content-center\">\n                <div className=\"col-6\">\n                    <h3>Проверьте информацию о заказе</h3>\n                    <p>Имя заказчика: {props.order.orderClientName}</p>\n                    <p>Телефон заказчика: {props.order.orderClientPhone}</p>\n                    <p>E-mail закзачика: {props.order.orderClientEmail}</p>\n                    <p>Колличество оплаченных билетов: {props.order.orderQuantity}</p>\n                    <p>Сумма заказа: {props.order.orderTotal}</p>\n                    <p>Событие: {event.eventName}</p>\n                </div>\n                <div className=\"col-4 \"><img src={qrInfo} alt=\"Ваш QR код\"/>\n                    <button className=\"btn btn-success m-1\" onClick={saveOrder}>Оплатить</button>\n                </div>\n\n\n            </div>\n            <MainEventsLI event={event}/>\n        </div>\n    );\n};\n\nexport default OrderCreateConfirm;","import React, {useState} from 'react';\nimport {useHistory} from \"react-router\";\nimport OrderCreateForm from \"./OrderCreateForm\";\nimport OrderCreateConfirm from \"./OrderCreateConfirm\";\n\nconst OrderCreate = () => {\n\n    const [view,setView] = useState(true);\n\n    const [errorMes,setErrorMes] = useState(\"\");\n\n    const [order,setOrder] = useState({\n        orderClientName: \"\",\n        orderClientPhone: \"\",\n        orderClientEmail: \"\",\n        orderQuantity: 0,\n        orderTotal: 0,\n        orderEventId: \"\"\n    });\n\n    const history = useHistory();\n\n    return (\n        <>\n            <div className=\"container-fluid justify-content-center\">\n                <div className=\"row order m-2 p-2 bg-success bg-opacity-75 align-items-center\">\n                    <div className=\"col\">\n                        <h1>Создание нового <span className=\"text-warning\">заказа</span></h1>\n                        <button className=\"btn btn-warning m-1\" onClick={() => history.push(\"/admin\")}>Отмена</button>\n                    </div>\n                    {errorMes ? <div className=\"col\"><h2><strong><span\n                        className=\"badge bg-warning text-success\">{errorMes}</span></strong></h2></div> : <></>}\n                </div>\n            </div>\n            {view ? <OrderCreateForm setErrorMes={setErrorMes} setView={setView} setOrder={setOrder} order={order}/> :\n                <OrderCreateConfirm order={order}/>}\n        </>\n    );\n};\n\nexport default OrderCreate;","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nfunction EventSmall(props) {\n\n    const date = new Date(props.event.eventDate);\n\n    return (\n        <tr>\n            <th>{props.event ? date.toLocaleDateString() : \"xxx\"}</th>\n            <th>{props.event ? props.event.eventName : \"xxx\"}</th>\n            <th>{props.event ? props.event.eventPrice : \"xxx\"}</th>\n            <th>{props.event ? `${props.event.eventRegistered ? props.event.eventRegistered : 0}/${props.event.eventCapacity}` : \"xxx\"}</th>\n            <th>\n                <Link to={\"/event/\" + props.event._id}>\n                    <button className=\"btn btn-secondary btn-sm m-1\"><i className=\"bi bi-eye\"></i></button>\n                </Link>\n            </th>\n        </tr>\n    )\n}\n\n\nconst GuideEventsList = (props) => {\n\n    const allEventsMapToTable = (events) => {\n        return (\n            events.length > 0 ?\n                events.map(event => <EventSmall event={event}\n                                                key={event._id}/>)\n                :\n                <tr>\n                    <th>LOADING...</th>\n                    <th>...</th>\n                    <th>...</th>\n                    <th>...</th>\n                    <th>...</th>\n\n                </tr>\n\n        )\n    }\n\n    return (\n        <div className=\"container-fluid justify-content-center\">\n            <div className=\"row p-2 m-2 bg-success bg-opacity-50\">\n                <div className=\"col-7\">\n                    <h4>Все Экскурсии {props.events[0] ? props.events[0].guideName : <></>}</h4>\n                </div>\n            </div>\n            <div className=\"row p-2 m-2\">\n                <table className=\"table table-striped table-hover table-sm\">\n                    <thead>\n                    <tr>\n                        <th>Дата</th>\n                        <th>Название</th>\n                        <th>Цена</th>\n                        <th>Места</th>\n                        <th><button className=\"btn btn-secondary disabled\" ><i className=\"bi bi-eye\"></i></button></th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {allEventsMapToTable(props.events)}\n                    </tbody>\n                </table>\n            </div>\n\n        </div>\n    );\n};\n\nexport default GuideEventsList;","import React from 'react';\nimport {useSelector} from \"react-redux\";\nimport {useHistory} from \"react-router-dom\";\nimport GuideEventsList from \"./GuideEventsList\";\n\nconst GuidePage = (props) => {\n\n    const history = useHistory();\n\n    const guide = useSelector(state => state.guides.find(guide => guide._id === props.match.params.id));\n    const events = useSelector(state => state.events.filter(event => event.guideName === guide.guideName));\n\n\n    return (\n        <>\n            <div className=\"container-fluid justify-content-center\">\n                <div className=\"row order m-2 p-2 bg-success bg-opacity-75 align-items-center\">\n                    <div className=\"col\">\n                        <h1>Информациия о <span className=\"text-warning\">Гиде</span></h1>\n                        <button className=\"btn btn-warning m-1\" onClick={() => history.push(\"/\")}>На Главную</button>\n                    </div>\n                </div>\n            </div>\n            <div className=\"container justify-content-center\">\n                <div className=\"row m-2 p-2 align-items-center\">\n                    <div className=\"col text-center\">\n                        {guide ? <h1>Имя Гида: {guide.guideName}</h1> : <p>не работает</p>}\n                        {guide ? <h2>Кто этот гид: {guide.guideDescription}</h2> : <p>не работает</p>}\n                        {guide ? <h2>Контактная инфа: {guide.guideContact}</h2> : <p>не работает</p>}\n                        {guide ? <img src={guide.guidePhoto} alt={\"QR\"}/> : <p>не работает</p>}\n                        {guide ? <h2>ID Гида: {guide._id}</h2> : <p>не работает</p>}\n                    </div>\n                </div>\n            </div>\n            <GuideEventsList events={events} />\n        </>\n    );\n}\n\nexport default GuidePage;","import {HashRouter, Switch, Route} from \"react-router-dom\";\nimport {useDispatch} from \"react-redux\";\nimport {getEvents, getGuides, getOrders} from \"./redux/actions\";\nimport React, {useEffect} from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Main from \"./components/user/Main/Main\";\nimport CreateEvent from \"./components/admin/events/CreateEvent\";\nimport EditEvent from \"./components/admin/events/EditEvent\";\nimport GuideCreate from \"./components/admin/guides/GuideCreate\";\nimport GuideEdit from \"./components/admin/guides/GuideEdit\";\nimport ClientHook from \"./components/user/client-hook/ClientHook\";\nimport AdminPanel from \"./components/admin/AdminPanel\";\nimport OrderPage from \"./components/admin/orders/OrderPage\";\nimport OrderCreate from \"./components/admin/orders/order-create/OrderCreate\";\nimport GuidePage from \"./components/user/guides-for-user/GuidePage\";\n\nfunction App() {\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getEvents());\n        dispatch(getGuides());\n        dispatch(getOrders());\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n    return (\n        <HashRouter>\n            <Switch>\n                <Route path=\"/\" exact component={Main}/>\n                <Route path=\"/event/:id\" component={ClientHook}/>\n                <Route path=\"/create_event/\" component={CreateEvent}/>\n                <Route path=\"/edit_event/:id\" component={EditEvent}/>\n                <Route path=\"/guides/:id\" component={GuidePage}/>\n                <Route path=\"/create_guide\" component={GuideCreate}/>\n                <Route path=\"/edit_guide/:id\" component={GuideEdit}/>\n                <Route path=\"/orders/:id\" component={OrderPage}/>\n                <Route path=\"/create_order/\" component={OrderCreate}/>\n                <Route path=\"/admin\" component={AdminPanel}/>\n                <Route path=\"*\" component={() => <h2 className=\"text-center\">404 NOT FOUND</h2>}/>\n            </Switch>\n                <p className=\"m-1 text-center\"> Guides Site. Made by Mikhail Lapshin. ©All rights reserved 2021</p>\n        </HashRouter>\n    );\n}\n\nexport default App;\n","import {DELL_EVENT, SET_EVENTS, SET_GUIDES, SET_ORDERS} from \"./actions\";\n\nconst initialState = {\n    user: \"admin\",\n    events:[],\n    guides:[],\n    orders:[]\n};\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_EVENTS:\n            return {...state, events: action.payload};\n        case SET_GUIDES:\n            return {...state, guides: action.payload};\n        case DELL_EVENT:\n            return {...state, events: state.events.filter(event => event._id !== action.payload)};\n        case SET_ORDERS:\n            return {...state, orders: action.payload};\n        default:\n            return state\n    }\n}","import {applyMiddleware, createStore} from \"redux\";\nimport {reducer} from \"./reducer\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\n\nexport const store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}